{"version":3,"sources":["webpack/universalModuleDefinition","ringcentral-helpers.js","webpack/bootstrap 294f17073f36ba61f694","src/lib/SDK.ts","src/lib/helpers/Extension.ts","src/lib/core/Helper.ts","external {\"amd\":\"ringcentral\",\"commonjs\":\"ringcentral\",\"commonjs2\":\"ringcentral\",\"root\":\"RingCentral\"}","src/lib/core/Validator.ts","src/lib/core/List.ts","src/lib/helpers/Account.ts","src/lib/helpers/BlockedNumber.ts","src/lib/helpers/Call.ts","src/lib/helpers/Contact.ts","src/lib/helpers/ContactGroup.ts","src/lib/helpers/Conferencing.ts","src/lib/helpers/Country.ts","src/lib/helpers/Device.ts","src/lib/helpers/DeviceModel.ts","src/lib/helpers/ForwardingNumber.ts","src/lib/helpers/Language.ts","src/lib/helpers/Location.ts","src/lib/helpers/Message.ts","src/lib/helpers/PhoneNumber.ts","src/lib/helpers/Presence.ts","src/lib/helpers/Ringout.ts","src/lib/helpers/Service.ts","src/lib/helpers/ShippingMethod.ts","src/lib/helpers/State.ts","src/lib/helpers/Timezone.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_4__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","validator","list","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","RingCentralHelpers","sdk","Validator","List","account","Account","blockedNumber","BlockedNumber","conferencing","Conferencing","contact","Contact","contactGroup","ContactGroup","country","Country","extension","Extension","deviceModel","DeviceModel","device","Device","presence","Presence","Call","forwardingNumber","ForwardingNumber","language","Language","state","State","location","Location","message","Message","phoneNumber","PhoneNumber","ringout","Ringout","service","Service","shippingMethod","ShippingMethod","timezone","Timezone","prototype","getCountry","getDeviceModel","getLanguage","getLocation","getShippingMethod","getState","getTimezone","getAccount","getBlockedNumber","getCall","getConferencing","getContact","getContactGroup","getDevice","getExtension","getForwardingNumber","getMessage","getPhoneNumber","getPresence","getRingout","getService","version","__extends","d","b","__","constructor","hasOwnProperty","helper","_super","apply","arguments","type","department","user","announcement","voicemail","createUrl","options","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","comparator","utils","extend","sortBy","compareFn","numberComparator","filter","search","filterBy","condition","toLocaleLowerCase","filterFn","containsFilter","extractFn","item","name","extensionNumber","toString","Helper","defaultProperty","getUtils","getId","object","isNew","getUri","resetAsNew","uri","parseMultipartResponse","ajax","isMultipart","data","result","error","map","loadRequest","url","method","saveRequest","post","body","Error","deleteRequest","syncRequest","sync","query","get","syncToken","syncType","nextPageExists","navigation","index","array","getIdFn","gather","bind","reduce","push","merge","target","supplement","mergeItems","_this","supplementIndex","updatedIDs","newItem","forEach","indexOf","validate","validators","errors","isValid","res","length","field","concat","email","value","multiple","isEmail","phone","isPhoneNumber","required","max","min","stringComparator","propertyExtractor","property","a","parseString","localeCompare","parseNumber","item1","item2","equalsFilter","obj","regexpFilter","RegExp","test","filterConfigs","self","opt","pass","extensionId","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","v","duration","parseInt","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","getTime","dateString","Date","strict","toLowerCase","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","some","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","replace","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","phoneFields","faxFields","addressFields","addressSubFields","nameFields","otherFields","emailFields","groupId","getFieldValues","where","fields","asHash","getFullName","join","getEmails","getPhones","getFaxes","getAddresses","match","string","inAddresses","transformFn","found","matchWith","transformed","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","opts","firstName","lastName","email2","email3","groupName","order","emergencyServiceAddress","street","city","zip","customerName","model","sku","hasFeature","feature","features","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","i","attachments","getPlatform","apiUrl","addMethod","addServer","addToken","getAttachmentContentType","contentType","getSubscription","setEvents","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","getProperty","validatePager","tollFreeAreaCodes","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","detailed","isAvailable","presenceStatus","updateSubscription","subscription","presences","events","addEvents","attachToExtensions","extensions","ex","presenceCall","status","callStatus","isSuccess","isError","isSmsEnabled","isServiceFeatureEnabledMethod","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","isEnabled","serviceFeatures","f","featureName","enabled","countryId"],"mappings":"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","file":"ringcentral-helpers.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ringcentral\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"ringcentral\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"ringcentral\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"RingCentral\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ringcentral\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"ringcentral\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"ringcentral\"));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"RingCentral\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar RingCentral = __webpack_require__(4);\nvar validator = __webpack_require__(5);\nvar list = __webpack_require__(6);\nvar accountHelper = __webpack_require__(7);\nvar blockedNumberHelper = __webpack_require__(8);\nvar callHelper = __webpack_require__(9);\nvar contactHelper = __webpack_require__(10);\nvar contactGroupHelper = __webpack_require__(11);\nvar conferencingHelper = __webpack_require__(12);\nvar countryHelper = __webpack_require__(13);\nvar deviceHelper = __webpack_require__(14);\nvar deviceModelHelper = __webpack_require__(15);\nvar extensionHelper = __webpack_require__(2);\nvar forwardingNumberHelper = __webpack_require__(16);\nvar languageHelper = __webpack_require__(17);\nvar locationHelper = __webpack_require__(18);\nvar messageHelper = __webpack_require__(19);\nvar phoneNumberHelper = __webpack_require__(20);\nvar presenceHelper = __webpack_require__(21);\nvar ringoutHelper = __webpack_require__(22);\nvar serviceHelper = __webpack_require__(23);\nvar shippingMethodHelper = __webpack_require__(24);\nvar stateHelper = __webpack_require__(25);\nvar timezoneHelper = __webpack_require__(26);\nvar RingCentralHelpers = (function () {\n    function RingCentralHelpers(sdk) {\n        this.sdk = sdk;\n        this.validator = new validator.Validator(sdk);\n        this.list = new list.List(sdk);\n        this.account = new accountHelper.Account(sdk, this.validator, this.list);\n        this.blockedNumber = new blockedNumberHelper.BlockedNumber(sdk, this.validator, this.list);\n        this.conferencing = new conferencingHelper.Conferencing(sdk, this.validator, this.list);\n        this.contact = new contactHelper.Contact(sdk, this.validator, this.list);\n        this.contactGroup = new contactGroupHelper.ContactGroup(sdk, this.validator, this.list);\n        this.country = new countryHelper.Country(sdk, this.validator, this.list);\n        this.extension = new extensionHelper.Extension(sdk, this.validator, this.list);\n        this.deviceModel = new deviceModelHelper.DeviceModel(sdk, this.validator, this.list);\n        this.device = new deviceHelper.Device(sdk, this.validator, this.list, this.extension, this.deviceModel);\n        this.presence = new presenceHelper.Presence(sdk, this.validator, this.list, this.extension);\n        this.call = new callHelper.Call(sdk, this.validator, this.list, this.presence, this.contact);\n        this.forwardingNumber = new forwardingNumberHelper.ForwardingNumber(sdk, this.validator, this.list);\n        this.language = new languageHelper.Language(sdk, this.validator, this.list);\n        this.state = new stateHelper.State(sdk, this.validator, this.list, this.country);\n        this.location = new locationHelper.Location(sdk, this.validator, this.list, this.state);\n        this.message = new messageHelper.Message(sdk, this.validator, this.list, this.contact);\n        this.phoneNumber = new phoneNumberHelper.PhoneNumber(sdk, this.validator, this.list);\n        this.ringout = new ringoutHelper.Ringout(sdk, this.validator, this.list);\n        this.service = new serviceHelper.Service(sdk, this.validator, this.list);\n        this.shippingMethod = new shippingMethodHelper.ShippingMethod(sdk, this.validator, this.list);\n        this.timezone = new timezoneHelper.Timezone(sdk, this.validator, this.list);\n    }\n    RingCentralHelpers.prototype.getCountry = function () { return this.country; };\n    RingCentralHelpers.prototype.getDeviceModel = function () { return this.deviceModel; };\n    RingCentralHelpers.prototype.getLanguage = function () { return this.language; };\n    RingCentralHelpers.prototype.getLocation = function () { return this.location; };\n    RingCentralHelpers.prototype.getShippingMethod = function () { return this.shippingMethod; };\n    RingCentralHelpers.prototype.getState = function () { return this.state; };\n    RingCentralHelpers.prototype.getTimezone = function () { return this.timezone; };\n    RingCentralHelpers.prototype.getAccount = function () { return this.account; };\n    RingCentralHelpers.prototype.getBlockedNumber = function () { return this.blockedNumber; };\n    RingCentralHelpers.prototype.getCall = function () { return this.call; };\n    RingCentralHelpers.prototype.getConferencing = function () { return this.conferencing; };\n    RingCentralHelpers.prototype.getContact = function () { return this.contact; };\n    RingCentralHelpers.prototype.getContactGroup = function () { return this.contactGroup; };\n    RingCentralHelpers.prototype.getDevice = function () { return this.device; };\n    RingCentralHelpers.prototype.getExtension = function () { return this.extension; };\n    RingCentralHelpers.prototype.getForwardingNumber = function () { return this.forwardingNumber; };\n    RingCentralHelpers.prototype.getMessage = function () { return this.message; };\n    RingCentralHelpers.prototype.getPhoneNumber = function () { return this.phoneNumber; };\n    RingCentralHelpers.prototype.getPresence = function () { return this.presence; };\n    RingCentralHelpers.prototype.getRingout = function () { return this.ringout; };\n    RingCentralHelpers.prototype.getService = function () { return this.service; };\n    RingCentralHelpers.version = '0.1.0';\n    return RingCentralHelpers;\n})();\nmodule.exports = RingCentralHelpers;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension() {\n        _super.apply(this, arguments);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar Helper = (function () {\n    function Helper(sdk, validator, list) {\n        this.defaultProperty = 'id';\n        this.sdk = sdk;\n        this.utils = sdk.getUtils();\n        this.validator = validator;\n        this.list = list;\n    }\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar Validator = (function () {\n    function Validator(sdk) {\n        this.sdk = sdk;\n        this.utils = sdk.getUtils();\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar List = (function () {\n    function List(sdk) {\n        this.sdk = sdk;\n        this.utils = sdk.getUtils();\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber() {\n        _super.apply(this, arguments);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(sdk, validator, list, presence, contact) {\n        _super.call(this, sdk, validator, list);\n        this.contact = contact;\n        this.presence = presence;\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact() {\n        _super.apply(this, arguments);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup() {\n        _super.apply(this, arguments);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(sdk, validator, list, extension, deviceModel) {\n        _super.call(this, sdk, validator, list);\n        this.extension = extension;\n        this.deviceModel = deviceModel;\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber() {\n        _super.apply(this, arguments);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(sdk, validator, list, state) {\n        _super.call(this, sdk, validator, list);\n        this.state = state;\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(sdk, validator, list, contact) {\n        _super.call(this, sdk, validator, list);\n        this.contact = contact;\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.sdk.getPlatform().apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return this.sdk.getSubscription().setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber() {\n        _super.apply(this, arguments);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(sdk, validator, list, extension) {\n        _super.call(this, sdk, validator, list);\n        this.extension = extension;\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return this.sdk.getSubscription().setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, //TODO Type\n        presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout() {\n        _super.apply(this, arguments);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(sdk, validator, list, country) {\n        _super.call(this, sdk, validator, list);\n        this.country = country;\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.country.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = __webpack_require__(3);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=ringcentral-helpers.js.map"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 294f17073f36ba61f694\n **/","/// <reference path=\"../externals.d.ts\" />\nvar RingCentral = require('ringcentral');\nvar validator = require('./core/Validator');\nvar list = require('./core/List');\nvar accountHelper = require('./helpers/Account');\nvar blockedNumberHelper = require('./helpers/BlockedNumber');\nvar callHelper = require('./helpers/Call');\nvar contactHelper = require('./helpers/Contact');\nvar contactGroupHelper = require('./helpers/ContactGroup');\nvar conferencingHelper = require('./helpers/Conferencing');\nvar countryHelper = require('./helpers/Country');\nvar deviceHelper = require('./helpers/Device');\nvar deviceModelHelper = require('./helpers/DeviceModel');\nvar extensionHelper = require('./helpers/Extension');\nvar forwardingNumberHelper = require('./helpers/ForwardingNumber');\nvar languageHelper = require('./helpers/Language');\nvar locationHelper = require('./helpers/Location');\nvar messageHelper = require('./helpers/Message');\nvar phoneNumberHelper = require('./helpers/PhoneNumber');\nvar presenceHelper = require('./helpers/Presence');\nvar ringoutHelper = require('./helpers/Ringout');\nvar serviceHelper = require('./helpers/Service');\nvar shippingMethodHelper = require('./helpers/ShippingMethod');\nvar stateHelper = require('./helpers/State');\nvar timezoneHelper = require('./helpers/Timezone');\nvar RingCentralHelpers = (function () {\n    function RingCentralHelpers(sdk) {\n        this.sdk = sdk;\n        this.validator = new validator.Validator(sdk);\n        this.list = new list.List(sdk);\n        this.account = new accountHelper.Account(sdk, this.validator, this.list);\n        this.blockedNumber = new blockedNumberHelper.BlockedNumber(sdk, this.validator, this.list);\n        this.conferencing = new conferencingHelper.Conferencing(sdk, this.validator, this.list);\n        this.contact = new contactHelper.Contact(sdk, this.validator, this.list);\n        this.contactGroup = new contactGroupHelper.ContactGroup(sdk, this.validator, this.list);\n        this.country = new countryHelper.Country(sdk, this.validator, this.list);\n        this.extension = new extensionHelper.Extension(sdk, this.validator, this.list);\n        this.deviceModel = new deviceModelHelper.DeviceModel(sdk, this.validator, this.list);\n        this.device = new deviceHelper.Device(sdk, this.validator, this.list, this.extension, this.deviceModel);\n        this.presence = new presenceHelper.Presence(sdk, this.validator, this.list, this.extension);\n        this.call = new callHelper.Call(sdk, this.validator, this.list, this.presence, this.contact);\n        this.forwardingNumber = new forwardingNumberHelper.ForwardingNumber(sdk, this.validator, this.list);\n        this.language = new languageHelper.Language(sdk, this.validator, this.list);\n        this.state = new stateHelper.State(sdk, this.validator, this.list, this.country);\n        this.location = new locationHelper.Location(sdk, this.validator, this.list, this.state);\n        this.message = new messageHelper.Message(sdk, this.validator, this.list, this.contact);\n        this.phoneNumber = new phoneNumberHelper.PhoneNumber(sdk, this.validator, this.list);\n        this.ringout = new ringoutHelper.Ringout(sdk, this.validator, this.list);\n        this.service = new serviceHelper.Service(sdk, this.validator, this.list);\n        this.shippingMethod = new shippingMethodHelper.ShippingMethod(sdk, this.validator, this.list);\n        this.timezone = new timezoneHelper.Timezone(sdk, this.validator, this.list);\n    }\n    RingCentralHelpers.prototype.getCountry = function () { return this.country; };\n    RingCentralHelpers.prototype.getDeviceModel = function () { return this.deviceModel; };\n    RingCentralHelpers.prototype.getLanguage = function () { return this.language; };\n    RingCentralHelpers.prototype.getLocation = function () { return this.location; };\n    RingCentralHelpers.prototype.getShippingMethod = function () { return this.shippingMethod; };\n    RingCentralHelpers.prototype.getState = function () { return this.state; };\n    RingCentralHelpers.prototype.getTimezone = function () { return this.timezone; };\n    RingCentralHelpers.prototype.getAccount = function () { return this.account; };\n    RingCentralHelpers.prototype.getBlockedNumber = function () { return this.blockedNumber; };\n    RingCentralHelpers.prototype.getCall = function () { return this.call; };\n    RingCentralHelpers.prototype.getConferencing = function () { return this.conferencing; };\n    RingCentralHelpers.prototype.getContact = function () { return this.contact; };\n    RingCentralHelpers.prototype.getContactGroup = function () { return this.contactGroup; };\n    RingCentralHelpers.prototype.getDevice = function () { return this.device; };\n    RingCentralHelpers.prototype.getExtension = function () { return this.extension; };\n    RingCentralHelpers.prototype.getForwardingNumber = function () { return this.forwardingNumber; };\n    RingCentralHelpers.prototype.getMessage = function () { return this.message; };\n    RingCentralHelpers.prototype.getPhoneNumber = function () { return this.phoneNumber; };\n    RingCentralHelpers.prototype.getPresence = function () { return this.presence; };\n    RingCentralHelpers.prototype.getRingout = function () { return this.ringout; };\n    RingCentralHelpers.prototype.getService = function () { return this.service; };\n    RingCentralHelpers.version = '0.1.0';\n    return RingCentralHelpers;\n})();\nmodule.exports = RingCentralHelpers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/SDK.ts\n ** module id = 1\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension() {\n        _super.apply(this, arguments);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Extension.ts\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar Helper = (function () {\n    function Helper(sdk, validator, list) {\n        this.defaultProperty = 'id';\n        this.sdk = sdk;\n        this.utils = sdk.getUtils();\n        this.validator = validator;\n        this.list = list;\n    }\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Helper.ts\n ** module id = 3\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"ringcentral\",\"commonjs\":\"ringcentral\",\"commonjs2\":\"ringcentral\",\"root\":\"RingCentral\"}\n ** module id = 4\n ** module chunks = 0 1\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar Validator = (function () {\n    function Validator(sdk) {\n        this.sdk = sdk;\n        this.utils = sdk.getUtils();\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Validator.ts\n ** module id = 5\n ** module chunks = 0 1\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar List = (function () {\n    function List(sdk) {\n        this.sdk = sdk;\n        this.utils = sdk.getUtils();\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/List.ts\n ** module id = 6\n ** module chunks = 0 1\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Account.ts\n ** module id = 7\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber() {\n        _super.apply(this, arguments);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/BlockedNumber.ts\n ** module id = 8\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(sdk, validator, list, presence, contact) {\n        _super.call(this, sdk, validator, list);\n        this.contact = contact;\n        this.presence = presence;\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Call.ts\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact() {\n        _super.apply(this, arguments);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Contact.ts\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup() {\n        _super.apply(this, arguments);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ContactGroup.ts\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Conferencing.ts\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Country.ts\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(sdk, validator, list, extension, deviceModel) {\n        _super.call(this, sdk, validator, list);\n        this.extension = extension;\n        this.deviceModel = deviceModel;\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Device.ts\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/DeviceModel.ts\n ** module id = 15\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber() {\n        _super.apply(this, arguments);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ForwardingNumber.ts\n ** module id = 16\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Language.ts\n ** module id = 17\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(sdk, validator, list, state) {\n        _super.call(this, sdk, validator, list);\n        this.state = state;\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Location.ts\n ** module id = 18\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(sdk, validator, list, contact) {\n        _super.call(this, sdk, validator, list);\n        this.contact = contact;\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.sdk.getPlatform().apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return this.sdk.getSubscription().setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Message.ts\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber() {\n        _super.apply(this, arguments);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/PhoneNumber.ts\n ** module id = 20\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(sdk, validator, list, extension) {\n        _super.call(this, sdk, validator, list);\n        this.extension = extension;\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return this.sdk.getSubscription().setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, //TODO Type\n        presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Presence.ts\n ** module id = 21\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout() {\n        _super.apply(this, arguments);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Ringout.ts\n ** module id = 22\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Service.ts\n ** module id = 23\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ShippingMethod.ts\n ** module id = 24\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(sdk, validator, list, country) {\n        _super.call(this, sdk, validator, list);\n        this.country = country;\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.country.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/State.ts\n ** module id = 25\n ** module chunks = 0\n **/","/// <reference path=\"../../externals.d.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar helper = require('../core/Helper');\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Timezone.ts\n ** module id = 26\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}