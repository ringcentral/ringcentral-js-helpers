{"version":3,"sources":["webpack/universalModuleDefinition","ringcentral-helpers.js","webpack/bootstrap 52501439a68cd4e233e1","src/SDK.ts","src/helpers/Account.ts","src/core/Helper.ts","src/core/Utils.ts","src/helpers/BlockedNumber.ts","src/core/Validator.ts","src/helpers/Call.ts","src/core/List.ts","src/helpers/Presence.ts","src/helpers/Extension.ts","src/helpers/Contact.ts","src/helpers/ContactGroup.ts","src/helpers/Conferencing.ts","src/helpers/Country.ts","src/helpers/Device.ts","src/helpers/DeviceModel.ts","src/helpers/ForwardingNumber.ts","src/helpers/Language.ts","src/helpers/Location.ts","src/helpers/State.ts","src/helpers/Message.ts","src/helpers/PhoneNumber.ts","src/helpers/Ringout.ts","src/helpers/Service.ts","src/helpers/ShippingMethod.ts","src/helpers/Timezone.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","country","deviceModel","language","location","shippingMethod","state","timezone","account","blockedNumber","conferencing","contact","contactGroup","device","extension","forwardingNumber","message","phoneNumber","presence","ringout","service","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","version","__extends","d","b","__","constructor","hasOwnProperty","prototype","Object","create","helper","Account","_super","Account.constructor","Account.createUrl","Helper","utils","Helper.constructor","Helper.createUrl","Helper.getId","Helper.isNew","Helper.resetAsNew","Helper.getUri","Helper.parseMultipartResponse","Helper.loadRequest","Helper.saveRequest","Helper.deleteRequest","Helper.syncRequest","Helper.nextPageExists","Helper.index","Helper.merge","extend","targetObject","sourceObject","forEach","object","cb","queryStringify","parameters","parseQueryString","queryString","isEmail","v","multiple","isPhoneNumber","argumentsToArray","args","isDate","obj","isFunction","isArray","isWindow","isNan","type","isPlainObject","getProperty","property","poll","fn","interval","timeout","stopPolling","parseString","s","parseNumber","n","hasOwn","toString","rdigit","class2type","split","name","toLowerCase","validator","BlockedNumber","BlockedNumber.constructor","BlockedNumber.createUrl","BlockedNumber.validate","validate","validators","email","value","phone","required","length","max","min","list","Call","Call.constructor","Call.createUrl","Call.getSessionId","Call.isInProgress","Call.isAlive","Call.isInbound","Call.isOutbound","Call.isMissed","Call.isFindMe","Call.getCallerInfo","Call.getAllCallerInfos","Call.formatDuration","Call.formatDuration.addZero","Call.filter","Call.comparator","Call.attachContacts","Call.checkMergeability","Call.combineCalls","Call.processCalls","Call.parsePresenceCalls","Call.getSignature","Call.mergePresenceCalls","Call.mergeAll","propertyExtractor","stringComparator","a","options","numberComparator","comparator","equalsFilter","containsFilter","regexpFilter","filter","filterConfigs","Presence","Presence.constructor","Presence.createUrl","Presence.getId","Presence.isAvailable","Presence.addEventToSubscription","Presence.updateSubscription","Presence.attachToExtensions","Presence.isCallInProgress","Extension","Extension.constructor","Extension.createUrl","Extension.isUser","Extension.isDepartment","Extension.isAnnouncement","Extension.isVoicemail","Extension.comparator","Extension.filter","Contact","Contact.constructor","Contact.createUrl","Contact.getFieldValues","Contact.getFullName","Contact.getEmails","Contact.getPhones","Contact.getFaxes","Contact.getAddresses","Contact.isAlive","Contact.match","Contact.matchAsPhone","Contact.attachToCallerInfos","Contact.comparator","Contact.filter","Contact.validate","ContactGroup","ContactGroup.constructor","ContactGroup.createUrl","ContactGroup.validate","Conferencing","Conferencing.constructor","Conferencing.createUrl","Country","Country.constructor","Country.createUrl","Device","Device.constructor","Device.createUrl","Device.validate","DeviceModel","DeviceModel.constructor","DeviceModel.getId","DeviceModel.createUrl","ForwardingNumber","ForwardingNumber.constructor","ForwardingNumber.createUrl","ForwardingNumber.getId","ForwardingNumber.hasFeature","ForwardingNumber.comparator","ForwardingNumber.filter","Language","Language.constructor","Language.createUrl","Location","Location.constructor","Location.createUrl","Location.filter","Location.comparator","State","State.constructor","State.createUrl","State.filter","Message","Message.constructor","Message.createUrl","Message.isInbound","Message.isOutbound","Message.isSMS","Message.isPager","Message.isVoiceMail","Message.isFax","Message.isAlive","Message.isRead","Message.setIsRead","Message.getAttachmentContentType","Message.addEventToSubscription","Message.getCallerInfos","Message.getAllCallerInfos","Message.comparator","Message.filter","Message.attachContacts","Message.shorten","Message.validateSMS","Message.validatePager","PhoneNumber","PhoneNumber.constructor","PhoneNumber.createUrl","PhoneNumber.isSMS","PhoneNumber.hasFeature","PhoneNumber.reserve","PhoneNumber.unreserve","PhoneNumber.comparator","PhoneNumber.filter","Ringout","Ringout.constructor","Ringout.createUrl","Ringout.resetAsNew","Ringout.isInProgress","Ringout.isSuccess","Ringout.isError","Ringout.validate","Service","Service.constructor","Service.createUrl","Service.isEnabled","Service.isServiceFeatureEnabledMethod","ShippingMethod","ShippingMethod.constructor","ShippingMethod.createUrl","Timezone","Timezone.constructor","Timezone.createUrl"],"mappings":"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","file":"ringcentral-helpers.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Helpers\"] = factory();\n\telse\n\t\troot[\"RingCentral\"] = root[\"RingCentral\"] || {}, root[\"RingCentral\"][\"Helpers\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Helpers\"] = factory();\n\telse\n\t\troot[\"RingCentral\"] = root[\"RingCentral\"] || {}, root[\"RingCentral\"][\"Helpers\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar accountHelper = __webpack_require__(2);\nvar blockedNumberHelper = __webpack_require__(5);\nvar callHelper = __webpack_require__(7);\nvar contactHelper = __webpack_require__(11);\nvar contactGroupHelper = __webpack_require__(12);\nvar conferencingHelper = __webpack_require__(13);\nvar countryHelper = __webpack_require__(14);\nvar deviceHelper = __webpack_require__(15);\nvar deviceModelHelper = __webpack_require__(16);\nvar extensionHelper = __webpack_require__(10);\nvar forwardingNumberHelper = __webpack_require__(17);\nvar languageHelper = __webpack_require__(18);\nvar locationHelper = __webpack_require__(19);\nvar messageHelper = __webpack_require__(21);\nvar phoneNumberHelper = __webpack_require__(22);\nvar presenceHelper = __webpack_require__(9);\nvar ringoutHelper = __webpack_require__(23);\nvar serviceHelper = __webpack_require__(24);\nvar shippingMethodHelper = __webpack_require__(25);\nvar stateHelper = __webpack_require__(20);\nvar timezoneHelper = __webpack_require__(26);\nexports.version = '0.1.0';\nfunction country() { return countryHelper.country; }\nexports.country = country;\nfunction deviceModel() { return deviceModelHelper.deviceModel; }\nexports.deviceModel = deviceModel;\nfunction language() { return languageHelper.language; }\nexports.language = language;\nfunction location() { return locationHelper.location; }\nexports.location = location;\nfunction shippingMethod() { return shippingMethodHelper.shippingMethod; }\nexports.shippingMethod = shippingMethod;\nfunction state() { return stateHelper.state; }\nexports.state = state;\nfunction timezone() { return timezoneHelper.timezone; }\nexports.timezone = timezone;\nfunction account() { return accountHelper.account; }\nexports.account = account;\nfunction blockedNumber() { return blockedNumberHelper.blockedNumber; }\nexports.blockedNumber = blockedNumber;\nfunction call() { return callHelper.call; }\nexports.call = call;\nfunction conferencing() { return conferencingHelper.conferencing; }\nexports.conferencing = conferencing;\nfunction contact() { return contactHelper.contact; }\nexports.contact = contact;\nfunction contactGroup() { return contactGroupHelper.contactGroup; }\nexports.contactGroup = contactGroup;\nfunction device() { return deviceHelper.device; }\nexports.device = device;\nfunction extension() { return extensionHelper.extension; }\nexports.extension = extension;\nfunction forwardingNumber() { return forwardingNumberHelper.forwardingNumber; }\nexports.forwardingNumber = forwardingNumber;\nfunction message() { return messageHelper.message; }\nexports.message = message;\nfunction phoneNumber() { return phoneNumberHelper.phoneNumber; }\nexports.phoneNumber = phoneNumber;\nfunction presence() { return presenceHelper.presence; }\nexports.presence = presence;\nfunction ringout() { return ringoutHelper.ringout; }\nexports.ringout = ringout;\nfunction service() { return serviceHelper.service; }\nexports.service = service;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nexports.account = new Account();\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar Helper = (function () {\n    function Helper() {\n        this.defaultProperty = 'id';\n        this.getId = this.getId.bind(this);\n    }\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId;\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        getIdFn = getIdFn || this.getId;\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\n/**\n * Ported from jQuery.fn.extend\n * Optional first parameter makes deep copy\n */\nfunction extend(targetObject, sourceObject) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n    // Handle a deep copy situation\n    if (typeof target === \"boolean\") {\n        deep = target;\n        // skip the boolean and the target\n        target = arguments[i] || {};\n        i++;\n    }\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== \"object\" && !isFunction(target)) {\n        target = {};\n    }\n    for (; i < length; i++) {\n        // Only deal with non-null/undefined values\n        if ((options = arguments[i]) !== null) {\n            // Extend the base object\n            for (name in options) {\n                src = target[name];\n                copy = options[name];\n                // Prevent never-ending loop\n                if (target === copy) {\n                    continue;\n                }\n                // Recurse if we're merging plain objects or arrays\n                if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        clone = src && isArray(src) ? src : [];\n                    }\n                    else {\n                        clone = src && isPlainObject(src) ? src : {};\n                    }\n                    // Never move original objects, clone them\n                    target[name] = extend(deep, clone, copy);\n                }\n                else if (copy !== undefined) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n    // Return the modified object\n    return target;\n}\nexports.extend = extend;\nfunction forEach(object, cb) {\n    for (var i in object) {\n        if (!object.hasOwnProperty(i))\n            continue;\n        var res = cb(object[i], i);\n        if (res === false)\n            break;\n    }\n}\nexports.forEach = forEach;\n/**\n * TODO Replace with something better\n * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n * @param {object} parameters\n * @returns {string}\n */\nfunction queryStringify(parameters) {\n    var array = [];\n    forEach(parameters, function (v, i) {\n        if (isArray(v)) {\n            v.forEach(function (vv) {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n            });\n        }\n        else {\n            array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n        }\n    });\n    return array.join('&');\n}\nexports.queryStringify = queryStringify;\n/**\n * TODO Replace with something better\n * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n * @param {string} queryString\n * @returns {object}\n */\nfunction parseQueryString(queryString) {\n    var argsParsed = {};\n    queryString.split('&').forEach(function (arg) {\n        arg = decodeURIComponent(arg);\n        if (arg.indexOf('=') == -1) {\n            argsParsed[arg.trim()] = true;\n        }\n        else {\n            var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n            if (key in argsParsed) {\n                if (key in argsParsed && !isArray(argsParsed[key]))\n                    argsParsed[key] = [argsParsed[key]];\n                argsParsed[key].push(value);\n            }\n            else {\n                argsParsed[key] = value;\n            }\n        }\n    });\n    return argsParsed;\n}\nexports.parseQueryString = parseQueryString;\n/**\n * Returns true if the passed value is valid email address.\n * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n */\nfunction isEmail(v, multiple) {\n    if (!!multiple) {\n        //this Regexp is also suitable for multiple emails (comma separated)\n        return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n    }\n    else {\n        return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n    }\n}\nexports.isEmail = isEmail;\nfunction isPhoneNumber(v) {\n    return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n}\nexports.isPhoneNumber = isPhoneNumber;\n/**\n * @param args\n * @returns {Array}\n */\nfunction argumentsToArray(args) {\n    return Array.prototype.slice.call(args || [], 0);\n}\nexports.argumentsToArray = argumentsToArray;\nfunction isDate(obj) {\n    return type(obj) === \"date\";\n}\nexports.isDate = isDate;\nfunction isFunction(obj) {\n    return type(obj) === \"function\";\n}\nexports.isFunction = isFunction;\nfunction isArray(obj) {\n    return Array.isArray ? Array.isArray(obj) : type(obj) === \"array\";\n}\nexports.isArray = isArray;\n// A crude way of determining if an object is a window\nfunction isWindow(obj) {\n    return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n}\nexports.isWindow = isWindow;\nfunction isNan(obj) {\n    return obj === null || !rdigit.test(obj) || isNaN(obj);\n}\nexports.isNan = isNan;\nfunction type(obj) {\n    return obj === null\n        ? String(obj)\n        : class2type[toString.call(obj)] || \"object\";\n}\nexports.type = type;\nfunction isPlainObject(obj) {\n    // Must be an Object.\n    // Because of IE, we also have to check the presence of the constructor property.\n    // Make sure that DOM nodes and window objects don't pass through, as well\n    if (!obj || type(obj) !== \"object\" || obj.nodeType || isWindow(obj)) {\n        return false;\n    }\n    // Not own constructor property must be Object\n    if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n        return false;\n    }\n    // Own properties are enumerated firstly, so to speed up,\n    // if last one is own, then all properties are own.\n    var key;\n    for (key in obj) { }\n    return key === undefined || hasOwn.call(obj, key);\n}\nexports.isPlainObject = isPlainObject;\nfunction getProperty(obj, property) {\n    return property\n        .split(/[.[\\]]/)\n        .reduce(function (res, part) {\n        if (!res)\n            return undefined;\n        return part ? res[part] : res;\n    }, obj);\n}\nexports.getProperty = getProperty;\nfunction poll(fn, interval, timeout) {\n    stopPolling(timeout);\n    interval = interval || 1000;\n    var next = function (delay) {\n        delay = delay || interval;\n        interval = delay;\n        return setTimeout(function () {\n            fn(next, delay);\n        }, delay);\n    };\n    return next();\n}\nexports.poll = poll;\nfunction stopPolling(timeout) {\n    if (timeout)\n        clearTimeout(timeout);\n}\nexports.stopPolling = stopPolling;\nfunction parseString(s) {\n    return s ? s.toString() : '';\n}\nexports.parseString = parseString;\nfunction parseNumber(n) {\n    if (!n)\n        return 0;\n    n = parseFloat(n);\n    return isNan(n) ? 0 : n;\n}\nexports.parseNumber = parseNumber;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar validator = __webpack_require__(6);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber() {\n        _super.apply(this, arguments);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return validator.validate([\n            { field: 'phoneNumber', validator: validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: validator.required(item.phoneNumber) },\n            { field: 'name', validator: validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nexports.blockedNumber = new BlockedNumber();\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar utils = __webpack_require__(4);\nfunction validate(validators) {\n    var result = {\n        errors: {},\n        isValid: true\n    };\n    result.errors = validators.reduce(function (errors, validator) {\n        var res = validator.validator();\n        if (res.length > 0) {\n            result.isValid = false;\n            errors[validator.field] = errors[validator.field] || [];\n            errors[validator.field] = errors[validator.field].concat(res);\n        }\n        return errors;\n    }, {});\n    return result;\n}\nexports.validate = validate;\n/**\n * It is not recommended to have any kinds of complex validators at front end\n * @deprecated\n */\nfunction email(value, multiple) {\n    return function () {\n        if (!value)\n            return [];\n        return utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n    };\n}\nexports.email = email;\n/**\n * It is not recommended to have any kinds of complex validators at front end\n * TODO International phone numbers\n * @deprecated\n */\nfunction phone(value) {\n    return function () {\n        if (!value)\n            return [];\n        return utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n    };\n}\nexports.phone = phone;\nfunction required(value) {\n    return function () {\n        return !value ? [new Error('Field is required')] : [];\n    };\n}\nexports.required = required;\nfunction length(value, max, min) {\n    return function () {\n        var errors = [];\n        if (!value)\n            return errors;\n        value = value.toString();\n        if (min && value.length < min)\n            errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n        if (max && value.length > max)\n            errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n        return errors;\n    };\n}\nexports.length = length;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(8);\nvar utils = __webpack_require__(4);\nvar presence = __webpack_require__(9);\nvar contact = __webpack_require__(11);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call() {\n        _super.call(this);\n        this.getSessionId = this.getSessionId.bind(this);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return list.comparator(utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        contact.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: presence.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nexports.call = new Call();\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar utils = __webpack_require__(4);\n/**\n * TODO Use utils getProperty\n * @param {string} property\n * @returns {function(object)}\n */\nfunction propertyExtractor(property) {\n    return function (item, options) {\n        return property ? ((item && item[property]) || null) : item;\n    };\n}\nexports.propertyExtractor = propertyExtractor;\n/**\n * Non-string types are converted to string\n * Non-string types are extracted as an empty string if they could be converted to false\n * If no options.sortBy given the item itself is extracted\n * Compares strings:\n * - if (a is less than b) return -1;\n * - if (a is greater than b) return 1;\n * - else (a must be equal to b) return 0;\n * Exceptions in will be suppressed, if any - a is assumed to be less than b\n */\nfunction stringComparator(a, b, options) {\n    return utils.parseString(a).localeCompare(utils.parseString(b));\n}\nexports.stringComparator = stringComparator;\n/**\n * Non-numeric types are extracted as 0 if they could be converted to false\n * Objects that could not be converted to number are extracted as 0\n * If no options.sortBy given the item itself is extracted\n * See parseFloat for more info\n * Compares numbers:\n * - if (a is less than b) return -1;\n * - if (a is greater than b) return 1;\n * - else (a must be equal to b) return 0;\n * Function does not check types\n * Exceptions in will be suppressed, if any - a is assumed to be less than b\n */\nfunction numberComparator(a, b, options) {\n    return (utils.parseNumber(a) - utils.parseNumber(b));\n}\nexports.numberComparator = numberComparator;\n/**\n * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n * compare function (_compareFn_ option, by default Helper.stringComparator)\n * Merged options are provided to _extractFn_ and _compareFn_\n * TODO Check memory leaks for all that options links\n */\nfunction comparator(options) {\n    options = utils.extend({\n        extractFn: propertyExtractor((options && options.sortBy) || null).bind(this),\n        compareFn: stringComparator.bind(this)\n    }, options);\n    return function (item1, item2) {\n        return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n    };\n}\nexports.comparator = comparator;\nfunction equalsFilter(obj, options) {\n    return (options.condition === obj);\n}\nexports.equalsFilter = equalsFilter;\n/**\n * @param {string} obj\n * @param {IListFilterOptions} options\n * @returns {boolean}\n */\nfunction containsFilter(obj, options) {\n    return (obj && obj.toString().indexOf(options.condition) > -1);\n}\nexports.containsFilter = containsFilter;\nfunction regexpFilter(obj, options) {\n    if (!(options.condition instanceof RegExp))\n        throw new Error('Condition must be an instance of RegExp');\n    return (options.condition.test(obj));\n}\nexports.regexpFilter = regexpFilter;\n/**\n * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n * compare function (`filterFn` option, by default Helper.equalsFilter)\n * Merged options are provided to `extractFn` and `compareFn`\n * Set `filterBy` to null to force `propertyExtractor` to return object itself\n * TODO Check memory leaks for all that options links\n */\nfunction filter(filterConfigs) {\n    var _this = this;\n    var self = this;\n    filterConfigs = (filterConfigs || []).map(function (opt) {\n        return utils.extend({\n            condition: '',\n            extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n            filterFn: self.equalsFilter.bind(_this)\n        }, opt);\n    });\n    return function (item) {\n        return filterConfigs.reduce(function (pass, opt) {\n            if (!pass || !opt.condition)\n                return pass;\n            return opt.filterFn(opt.extractFn(item, opt), opt);\n        }, true);\n    };\n}\nexports.filter = filter;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar utils = __webpack_require__(4);\nvar helper = __webpack_require__(3);\nvar extension = __webpack_require__(10);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence() {\n        _super.apply(this, arguments);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (extension.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.addEventToSubscription = function (subscription, options, id) {\n        return subscription.setEventFilters([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, //TODO Type\n        presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEventFilters(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[extension.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nexports.presence = new Presence();\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(8);\nvar utils = __webpack_require__(4);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension() {\n        _super.apply(this, arguments);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return list.comparator(utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nexports.extension = new Extension();\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(8);\nvar utils = __webpack_require__(4);\nvar validator = __webpack_require__(6);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact() {\n        _super.apply(this, arguments);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return list.comparator(utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return validator.validate([\n            { field: 'firstName', validator: validator.required(item.firstName) },\n            { field: 'lastName', validator: validator.required(item.lastName) },\n            { field: 'email', validator: validator.email(item.email) },\n            { field: 'email2', validator: validator.email(item.email2) },\n            { field: 'email3', validator: validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nexports.contact = new Contact();\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar validator = __webpack_require__(6);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup() {\n        _super.apply(this, arguments);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return validator.validate([\n            { field: 'groupName', validator: validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nexports.contactGroup = new ContactGroup();\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nexports.conferencing = new Conferencing();\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nexports.country = new Country();\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar validator = __webpack_require__(6);\nvar extension = __webpack_require__(10);\nvar deviceModel = __webpack_require__(16);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device() {\n        _super.apply(this, arguments);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: validator.required(extension.extension.getId(item && item.extension)) },\n            { field: 'model', validator: validator.required(deviceModel.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nexports.device = new Device();\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nexports.deviceModel = new DeviceModel();\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(8);\nvar utils = __webpack_require__(4);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber() {\n        _super.apply(this, arguments);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return list.comparator(utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = utils.extend({\n            features: []\n        }, options);\n        return list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nexports.forwardingNumber = new ForwardingNumber();\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nexports.language = new Language();\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(8);\nvar utils = __webpack_require__(4);\nvar state = __webpack_require__(20);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        _super.apply(this, arguments);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var uniqueNPAs = [];\n        options = utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (state.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = list.numberComparator;\n        }\n        return list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nexports.location = new Location();\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar utils = __webpack_require__(4);\nvar list = __webpack_require__(8);\nvar country = __webpack_require__(14);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State() {\n        _super.apply(this, arguments);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        options = utils.extend({\n            countryId: ''\n        }, options);\n        return list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (country.country.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nexports.state = new State();\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(8);\nvar utils = __webpack_require__(4);\nvar validator = __webpack_require__(6);\nvar contact = __webpack_require__(11);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message() {\n        _super.apply(this, arguments);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.addEventToSubscription = function (subscription, options) {\n        return subscription.setEventFilters([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return list.comparator(utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        contact.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return validator.validate([\n            { field: 'to', validator: validator.required(utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: validator.required(utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: validator.required(utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: validator.length(utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return validator.validate([\n            { field: 'to', validator: validator.required(utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: validator.required(utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: validator.required(utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: validator.length(utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nexports.message = new Message();\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar list = __webpack_require__(8);\nvar utils = __webpack_require__(4);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber() {\n        _super.apply(this, arguments);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return list.comparator(utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nexports.phoneNumber = new PhoneNumber();\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar validator = __webpack_require__(6);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout() {\n        _super.apply(this, arguments);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return validator.validate([\n            { field: 'to', validator: validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nexports.ringout = new Ringout();\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nexports.service = new Service();\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nexports.shippingMethod = new ShippingMethod();\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(3);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nexports.timezone = new Timezone();\n\n\n/***/ }\n/******/ ])\n});\n;\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 52501439a68cd4e233e1\n **/","/// <reference path=\"./externals.d.ts\" />\nimport * as validator from './core/Validator';\nimport * as list from './core/List';\nimport * as utils from './core/Utils';\n\nimport * as accountHelper from './helpers/Account';\nimport * as blockedNumberHelper from './helpers/BlockedNumber';\nimport * as callHelper from './helpers/Call';\nimport * as contactHelper from './helpers/Contact';\nimport * as contactGroupHelper from './helpers/ContactGroup';\nimport * as conferencingHelper from './helpers/Conferencing';\nimport * as countryHelper from './helpers/Country';\nimport * as deviceHelper from './helpers/Device';\nimport * as deviceModelHelper from './helpers/DeviceModel';\nimport * as extensionHelper from './helpers/Extension';\nimport * as forwardingNumberHelper from './helpers/ForwardingNumber';\nimport * as languageHelper from './helpers/Language';\nimport * as locationHelper from './helpers/Location';\nimport * as messageHelper from './helpers/Message';\nimport * as phoneNumberHelper from './helpers/PhoneNumber';\nimport * as presenceHelper from './helpers/Presence';\nimport * as ringoutHelper from './helpers/Ringout';\nimport * as serviceHelper from './helpers/Service';\nimport * as shippingMethodHelper from './helpers/ShippingMethod';\nimport * as stateHelper from './helpers/State';\nimport * as timezoneHelper from './helpers/Timezone';\n\nexport var version = '0.1.0';\n\nexport function country() { return countryHelper.country; }\n\nexport function deviceModel() { return deviceModelHelper.deviceModel; }\n\nexport function language() { return languageHelper.language; }\n\nexport function location() { return locationHelper.location; }\n\nexport function shippingMethod() { return shippingMethodHelper.shippingMethod; }\n\nexport function state() { return stateHelper.state; }\n\nexport function timezone() { return timezoneHelper.timezone; }\n\nexport function account() { return accountHelper.account; }\n\nexport function blockedNumber() { return blockedNumberHelper.blockedNumber; }\n\nexport function call() { return callHelper.call; }\n\nexport function conferencing() { return conferencingHelper.conferencing; }\n\nexport function contact() { return contactHelper.contact; }\n\nexport function contactGroup() { return contactGroupHelper.contactGroup; }\n\nexport function device() { return deviceHelper.device; }\n\nexport function extension() { return extensionHelper.extension; }\n\nexport function forwardingNumber() { return forwardingNumberHelper.forwardingNumber; }\n\nexport function message() { return messageHelper.message; }\n\nexport function phoneNumber() { return phoneNumberHelper.phoneNumber; }\n\nexport function presence() { return presenceHelper.presence; }\n\nexport function ringout() { return ringoutHelper.ringout; }\n\nexport function service() { return serviceHelper.service; }\n\n\n/** WEBPACK FOOTER **\n ** ./src/SDK.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\n\nexport class Account extends helper.Helper {\n\n    createUrl() {\n        return '/account/~';\n    }\n\n}\n\nexport var account = new Account();\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Account.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as validator from './Validator';\nimport * as list from './List';\nimport * as utils from './Utils';\n\nexport class Helper {\n\n    protected defaultProperty:string = 'id';\n\n    constructor() {\n        this.getId = this.getId.bind(this);\n    }\n\n    createUrl(options?:any, id?:string) {\n        return '';\n    }\n\n    getId(object:IHelperObject) {\n        return object && object[this.defaultProperty];\n    }\n\n    isNew(object:IHelperObject) {\n        return !this.getId(object) || !this.getUri(object);\n    }\n\n    resetAsNew(object:IHelperObject) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    }\n\n    getUri(object:IHelperObject) {\n        return object && object.uri;\n    }\n\n    parseMultipartResponse(ajax:any) {\n\n        if (ajax.isMultipart()) {\n\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter((result) => {\n                return (!result.error);\n            }).map((result:any) => {\n                return result.data;\n            });\n\n        } else { // Single ID\n\n            return [ajax.data];\n\n        }\n\n    }\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    loadRequest(object?, options?:any) {\n\n        return utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n\n    }\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    saveRequest(object?, options?:any) {\n\n        if (!object && !(options && (options.post || options.body))) throw new Error('No Object');\n\n        return utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n\n    }\n\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    deleteRequest(object?, options?:any) {\n\n        options = options || {};\n\n        if (!this.getUri(object) && !(options && options.url)) throw new Error('Object has to be not new or URL must be provided');\n\n        return utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n\n    }\n\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    syncRequest(options?:any) {\n\n        options = options || {};\n\n        options.url = options.url || this.createUrl({sync: true});\n        options.query = options.query || options.get || {};\n\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        } else {\n            options.query.syncType = 'FSync';\n        }\n\n        return options;\n\n    }\n\n    nextPageExists(data):boolean {\n\n        return (data && data.navigation && ('nextPage' in data.navigation));\n\n    }\n\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    index(array:IHelperObject[], getIdFn?:(obj:IHelperObject)=>string, gather?:boolean):any {\n\n        getIdFn = getIdFn || this.getId;\n        array = array || [];\n\n        return array.reduce((index, item) => {\n\n            var id = getIdFn(item);\n\n            if (!id || (index[id] && !gather)) return index;\n\n            if (gather) {\n                if (!index[id]) index[id] = [];\n                index[id].push(item);\n            } else {\n                index[id] = item;\n            }\n\n            return index;\n\n        }, {});\n\n    }\n\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    merge(target:IHelperObject[],\n          supplement:IHelperObject[],\n          getIdFn?:(obj:IHelperObject)=>string, mergeItems?:boolean):any {\n\n        getIdFn = getIdFn || this.getId;\n        target = target || [];\n        supplement = supplement || [];\n\n        var supplementIndex = this.index(supplement, getIdFn),\n            updatedIDs = [],\n            result = <IHelperObject[]>target.map((item) => {\n\n                var id = getIdFn(item),\n                    newItem = supplementIndex[id];\n\n                if (newItem) updatedIDs.push(id);\n\n                return newItem ? (mergeItems ? utils.extend(item, newItem) : newItem) : item;\n\n            });\n\n        supplement.forEach((item) => {\n\n            if (updatedIDs.indexOf(getIdFn(item)) == -1) result.push(item);\n\n        });\n\n        return result;\n\n    }\n\n\n}\n\nexport interface IHelperObject {\n    id?:string;\n    uri?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/Helper.ts\n **/","/// <reference path=\"../externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty,\n    toString = Object.prototype.toString,\n    rdigit = /\\d/,\n    class2type = {};\n\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach((name) => {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\n\n/**\n * Ported from jQuery.fn.extend\n * Optional first parameter makes deep copy\n */\nexport function extend(targetObject:any, sourceObject:any, ...args) {\n\n    var options, name, src, copy, copyIsArray, clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    // Handle a deep copy situation\n    if (typeof target === \"boolean\") {\n        deep = target;\n\n        // skip the boolean and the target\n        target = arguments[i] || {};\n        i++;\n    }\n\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== \"object\" && !isFunction(target)) {\n        target = {};\n    }\n\n    for (; i < length; i++) {\n\n        // Only deal with non-null/undefined values\n        if ((options = arguments[i]) !== null) {\n\n            // Extend the base object\n            for (name in options) {\n\n                src = target[name];\n                copy = options[name];\n\n                // Prevent never-ending loop\n                if (target === copy) {\n                    continue;\n                }\n\n                // Recurse if we're merging plain objects or arrays\n                if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        clone = src && isArray(src) ? src : [];\n                    } else {\n                        clone = src && isPlainObject(src) ? src : {};\n                    }\n\n                    // Never move original objects, clone them\n                    target[name] = extend(deep, clone, copy);\n\n                    // Don't bring in undefined values\n                } else if (copy !== undefined) {\n\n                    target[name] = copy;\n\n                }\n            }\n        }\n    }\n\n    // Return the modified object\n    return target;\n\n}\n\nexport function forEach(object, cb) {\n\n    for (var i in object) {\n\n        if (!object.hasOwnProperty(i)) continue;\n\n        var res = cb(object[i], i);\n\n        if (res === false) break;\n\n    }\n\n}\n\n/**\n * TODO Replace with something better\n * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n * @param {object} parameters\n * @returns {string}\n */\nexport function queryStringify(parameters) {\n\n    var array = [];\n\n    forEach(parameters, (v, i) => {\n\n        if (isArray(v)) {\n            v.forEach((vv) => {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n            });\n        } else {\n            array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n        }\n\n    });\n\n    return array.join('&');\n\n}\n\n/**\n * TODO Replace with something better\n * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n * @param {string} queryString\n * @returns {object}\n */\nexport function parseQueryString(queryString):any {\n\n    var argsParsed = {};\n\n    queryString.split('&').forEach((arg) => {\n\n        arg = decodeURIComponent(arg);\n\n        if (arg.indexOf('=') == -1) {\n\n            argsParsed[arg.trim()] = true;\n\n        } else {\n\n            var pair = arg.split('='),\n                key = pair[0].trim(),\n                value = pair[1].trim();\n\n            if (key in argsParsed) {\n                if (key in argsParsed && !isArray(argsParsed[key])) argsParsed[key] = [argsParsed[key]];\n                argsParsed[key].push(value);\n            } else {\n                argsParsed[key] = value;\n            }\n\n        }\n\n    });\n\n    return argsParsed;\n\n}\n\n/**\n * Returns true if the passed value is valid email address.\n * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n */\nexport function isEmail(v:string, multiple:boolean):boolean {\n    if (!!multiple) {\n        //this Regexp is also suitable for multiple emails (comma separated)\n        return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n    } else {\n        return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n    }\n\n}\n\nexport function isPhoneNumber(v:string):boolean {\n    return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n}\n\n/**\n * @param args\n * @returns {Array}\n */\nexport function argumentsToArray(args:any) {\n    return Array.prototype.slice.call(args || [], 0);\n}\n\nexport function isDate(obj:any):boolean {\n    return type(obj) === \"date\";\n}\n\nexport function isFunction(obj:any):boolean {\n    return type(obj) === \"function\";\n}\n\nexport function isArray(obj:any):boolean {\n    return Array.isArray ? Array.isArray(obj) : type(obj) === \"array\";\n}\n\n// A crude way of determining if an object is a window\nexport function isWindow(obj:any):boolean {\n    return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n}\n\nexport function isNan(obj:any):boolean {\n    return obj === null || !rdigit.test(obj) || isNaN(obj);\n}\n\nexport function type(obj:any):string {\n    return obj === null\n        ? String(obj)\n        : class2type[toString.call(obj)] || \"object\";\n}\n\nexport function isPlainObject(obj:any):boolean {\n\n    // Must be an Object.\n    // Because of IE, we also have to check the presence of the constructor property.\n    // Make sure that DOM nodes and window objects don't pass through, as well\n    if (!obj || type(obj) !== \"object\" || obj.nodeType || isWindow(obj)) {\n        return false;\n    }\n\n    // Not own constructor property must be Object\n    if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n        return false;\n    }\n\n    // Own properties are enumerated firstly, so to speed up,\n    // if last one is own, then all properties are own.\n\n    var key;\n    for (key in obj) {}\n\n    return key === undefined || hasOwn.call(obj, key);\n\n}\n\nexport function getProperty(obj:any, property:string):any {\n\n    return property\n        .split(/[.[\\]]/)\n        .reduce((res, part) => {\n            if (!res) return undefined;\n            return part ? res[part] : res;\n        }, obj);\n\n}\n\nexport function poll(fn, interval?:number, timeout?:any):any { //NodeJS.Timer|number\n\n    stopPolling(timeout);\n\n    interval = interval || 1000;\n\n    var next = (delay?:number):any => {\n\n        delay = delay || interval;\n\n        interval = delay;\n\n        return setTimeout(() => {\n\n            fn(next, delay);\n\n        }, delay);\n\n    };\n\n    return next();\n\n}\n\nexport function stopPolling(timeout) {\n    if (timeout) clearTimeout(timeout);\n}\n\nexport function parseString(s:any):string {\n    return s ? s.toString() : '';\n}\n\nexport function parseNumber(n:any):number {\n    if (!n) return 0;\n    n = parseFloat(n);\n    return isNan(n) ? 0 : n;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/Utils.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as validator from '../core/Validator';\n\nexport class BlockedNumber extends helper.Helper {\n\n    createUrl(options?:IBlockedNumberOptions, id?:string) {\n\n        options = options || {};\n\n        return '/account/~/extension/' +\n               (options.extensionId ? options.extensionId : '~') +\n               '/blocked-number' +\n               (id ? '/' + id : '');\n\n    }\n\n    validate(item:IBlockedNumber) {\n\n        return validator.validate([\n            {field: 'phoneNumber', validator: validator.phone(item.phoneNumber)},\n            {field: 'phoneNumber', validator: validator.required(item.phoneNumber)},\n            {field: 'name', validator: validator.required(item.name)}\n        ]);\n\n    }\n\n}\n\nexport var blockedNumber = new BlockedNumber();\n\nexport interface IBlockedNumber extends helper.IHelperObject {\n    name:string;\n    phoneNumber:string;\n}\n\nexport interface IBlockedNumberOptions {\n    extensionId?:string;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/BlockedNumber.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as utils from './Utils';\n\nexport function validate(validators:IValidator[]):IValidatorResult {\n\n    var result = <IValidatorResult>{\n        errors: {},\n        isValid: true\n    };\n\n    result.errors = <any>validators.reduce((errors, validator) => {\n\n        var res = validator.validator();\n\n        if (res.length > 0) {\n            result.isValid = false;\n            errors[validator.field] = errors[validator.field] || [];\n            errors[validator.field] = errors[validator.field].concat(res);\n        }\n\n        return errors;\n\n    }, {});\n\n    return result;\n\n}\n\n/**\n * It is not recommended to have any kinds of complex validators at front end\n * @deprecated\n */\nexport function email(value:string, multiple?:boolean) {\n    return ():Error[] => {\n        if (!value) return [];\n        return utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n    };\n}\n\n/**\n * It is not recommended to have any kinds of complex validators at front end\n * TODO International phone numbers\n * @deprecated\n */\nexport function phone(value:string) {\n    return ():Error[] => {\n        if (!value) return [];\n        return utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n    };\n}\n\nexport function required(value:any) {\n    return ():Error[] => {\n        return !value ? [new Error('Field is required')] : [];\n    };\n}\n\nexport function length(value:string, max?:number, min?:number) {\n    return ():Error[] => {\n\n        var errors = [];\n\n        if (!value) return errors;\n\n        value = value.toString();\n\n        if (min && value.length < min) errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n        if (max && value.length > max) errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n\n        return errors;\n\n    };\n}\n\nexport interface IValidator {\n    field:string;\n    validator:(...args)=>Error[];\n}\n\nexport interface IValidatorErrors {\n    [id:string]: Error[];\n}\n\nexport interface IValidatorResult {\n    isValid:boolean;\n    errors:IValidatorErrors;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/Validator.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as validator from '../core/Validator';\nimport * as list from '../core/List';\nimport * as utils from '../core/Utils';\nimport * as presence from './Presence';\nimport * as contact from './Contact';\n\nexport class Call extends helper.Helper {\n\n    constructor() {\n        super();\n        this.getSessionId = this.getSessionId.bind(this);\n    }\n\n    createUrl(options?:ICallOptions, id?:string) {\n\n        options = options || {};\n\n        if (!('personal' in options) && !('extensionId' in options)) options.personal = true;\n\n        return '/account/~/' +\n               (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n               (options.active ? 'active-calls' : 'call-log') +\n               (id ? '/' + id : '');\n\n    }\n\n    getSessionId(call:ICall) {\n        return (call && call.sessionId);\n    }\n\n    isInProgress(call:ICall) {\n        return (call && call.result == 'In Progress');\n    }\n\n    isAlive(call:ICall) {\n        return (call && call.availability == 'Alive');\n    }\n\n    isInbound(call:ICall) {\n        return (call && call.direction == 'Inbound');\n    }\n\n    isOutbound(call:ICall) {\n        return !this.isInbound(call);\n    }\n\n    isMissed(call:ICall) {\n        return (call && call.result == 'Missed');\n    }\n\n    isFindMe(call:ICall) {\n        return (call && call.action == 'FindMe');\n    }\n\n    getCallerInfo(call:ICall):ICallerInfo {\n        return this.isInbound(call) ? call.from : call.to;\n    }\n\n    getAllCallerInfos(call:ICall):ICallerInfo[] {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    }\n\n    formatDuration(call:ICall) {\n\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n\n        var duration = parseInt(<any>call.duration),\n            hours = Math.floor(duration / (60 * 60)),\n            mins = Math.floor((duration % (60 * 60)) / 60),\n            secs = Math.floor(duration % 60);\n\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n\n    }\n\n    filter(options?:ICallFilterOptions):(call:ICall)=>boolean {\n\n        options = utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n\n        return list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'type', condition: options.type}\n        ]);\n\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        return list.comparator(utils.extend({\n            sortBy: 'startTime'\n        }, options));\n\n    }\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    attachContacts(contacts:contact.IContact[], calls:ICall[], options?:contact.IContactMatchOptions) {\n\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce((callerInfos, call) => {\n\n            return callerInfos.concat(this.getAllCallerInfos(call));\n\n        }, []);\n\n        contact.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    }\n\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    checkMergeability(outboundRingOutCall:ICall, inboundCall:ICall, options?:ICallProcessingOptions):boolean {\n\n        var getTime = (dateString) => {\n            return (new Date(dateString)).getTime();\n        };\n\n        return (\n            (!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n\n    }\n\n    combineCalls(outboundRingOutCall:ICall, inboundCall:ICall, options?:ICallProcessingOptions):ICall[] {\n\n        options = options || <any>{};\n\n        var result = [];\n\n        outboundRingOutCall.hasSubsequent = true;\n\n        if (options.merge) {\n\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n\n        } else {\n\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n\n        }\n\n        return result;\n\n    }\n\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    processCalls(calls:ICall[], options?:ICallProcessingOptions):ICall[] {\n\n        var processedCalls = [],\n            callsToMerge = [],\n            self = this;\n\n        // Iterate through calls\n        calls.forEach((call:ICall) => {\n\n            var merged = false;\n\n            call.subsequent = false;\n            call.hasSubsequent = false;\n\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some((secondCall:ICall) => {\n\n                if (call === secondCall) return false;\n\n                if (self.checkMergeability(call, secondCall, options)) {\n\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n\n                    merged = true;\n\n                }\n\n                return merged;\n\n            });\n\n        });\n\n        // After all calls are merged, add non-merged calls\n        calls.forEach((call:ICall) => {\n\n            if (callsToMerge.indexOf(call) == -1) processedCalls.push(call);\n\n        });\n\n        return processedCalls;\n\n    }\n\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    parsePresenceCalls(activeCalls:presence.IPresenceCall[]):ICall[] {\n\n        return activeCalls.map((activeCall:presence.IPresenceCall):ICall => {\n\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: {phoneNumber: activeCall.from},\n                to: {phoneNumber: activeCall.to},\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: presence.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n\n        });\n\n    }\n\n    getSignature(call:ICall) {\n\n        var cleanup = (phoneNumber) => {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n\n    }\n\n    mergePresenceCalls(presenceCalls:ICall[], presence:presence.IPresence):ICall[] {\n\n        var currentDate = new Date(),\n\n            activeCalls = this\n                .parsePresenceCalls(presence && presence.activeCalls || [])\n                .map((call:ICall) => {\n                    // delete property to make sure it is skipped during merge\n                    delete call.startTime;\n                    return call;\n                });\n\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n\n        presenceCalls.forEach((call:ICall) => {\n            if (!call.startTime) call.startTime = currentDate.toISOString();\n        });\n\n        return presenceCalls;\n\n    }\n\n    mergeAll(presenceCalls:ICall[], calls:ICall[], activeCalls:ICall[]):ICall[] {\n\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n\n    }\n\n}\n\nexport var call = new Call();\n\nexport interface ICall extends helper.IHelperObject {\n    sessionId?:string;\n    availability?:string;\n    startTime?:string;\n    duration?:number;\n    type?:string;\n    direction?:string;\n    action?:string;\n    result?:string;\n    to?:ICallerInfo;\n    from?:ICallerInfo;\n    subsequent?:boolean; // added during processing\n    hasSubsequent?:boolean; // added during processing\n    telephonyStatus?:string; // added during processing\n}\n\nexport interface ICallOptions {\n    extensionId?:string;\n    active?:boolean;\n    personal?:boolean;\n}\n\nexport interface ICallProcessingOptions {\n    maxStartTimeDiscrepancy?:number;\n    strict?:boolean;\n    merge?:boolean;\n}\n\nexport interface ICallFilterOptions {\n    extensionId?:string;\n    direction?:string;\n    type?:string;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/CallerInfo.html\n */\nexport interface ICallerInfo {\n    phoneNumber?:string;\n    extensionNumber?:string;\n    name?:string;\n    location?:string;\n    contact?:contact.IContact; // corresponding contact (added by attachContacts methods)\n    contactPhone?:string; // contact's phone as written in contact (added by attachContacts methods)\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Call.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as utils from './Utils';\n\n/**\n * TODO Use utils getProperty\n * @param {string} property\n * @returns {function(object)}\n */\nexport function propertyExtractor(property) {\n    return (item, options) => {\n        return property ? ((item && item[property]) || null) : item;\n    };\n}\n\n/**\n * Non-string types are converted to string\n * Non-string types are extracted as an empty string if they could be converted to false\n * If no options.sortBy given the item itself is extracted\n * Compares strings:\n * - if (a is less than b) return -1;\n * - if (a is greater than b) return 1;\n * - else (a must be equal to b) return 0;\n * Exceptions in will be suppressed, if any - a is assumed to be less than b\n */\nexport function stringComparator(a:string, b:string, options?:IListComparatorOptions):number {\n\n    return utils.parseString(a).localeCompare(utils.parseString(b));\n\n}\n\n/**\n * Non-numeric types are extracted as 0 if they could be converted to false\n * Objects that could not be converted to number are extracted as 0\n * If no options.sortBy given the item itself is extracted\n * See parseFloat for more info\n * Compares numbers:\n * - if (a is less than b) return -1;\n * - if (a is greater than b) return 1;\n * - else (a must be equal to b) return 0;\n * Function does not check types\n * Exceptions in will be suppressed, if any - a is assumed to be less than b\n */\nexport function numberComparator(a:any, b:any, options?:IListComparatorOptions):number {\n\n    return (utils.parseNumber(a) - utils.parseNumber(b));\n\n}\n\n/**\n * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n * compare function (_compareFn_ option, by default Helper.stringComparator)\n * Merged options are provided to _extractFn_ and _compareFn_\n * TODO Check memory leaks for all that options links\n */\nexport function comparator(options?:IListComparatorOptions):(item1:any, item2:any) => number {\n\n    options = utils.extend({\n        extractFn: propertyExtractor((options && options.sortBy) || null).bind(this),\n        compareFn: stringComparator.bind(this)\n    }, options);\n\n    return (item1:any, item2:any):number => {\n\n        return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n\n    };\n\n}\n\nexport function equalsFilter(obj:any, options?:IListFilterOptions):boolean {\n    return (options.condition === obj);\n}\n\n/**\n * @param {string} obj\n * @param {IListFilterOptions} options\n * @returns {boolean}\n */\nexport function containsFilter(obj:any, options?:IListFilterOptions):boolean {\n    return (obj && obj.toString().indexOf(options.condition) > -1);\n}\n\nexport function regexpFilter(obj, options?:IListFilterOptions):boolean {\n    if (!(options.condition instanceof RegExp)) throw new Error('Condition must be an instance of RegExp');\n    return (options.condition.test(obj));\n}\n\n/**\n * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n * compare function (`filterFn` option, by default Helper.equalsFilter)\n * Merged options are provided to `extractFn` and `compareFn`\n * Set `filterBy` to null to force `propertyExtractor` to return object itself\n * TODO Check memory leaks for all that options links\n */\nexport function filter(filterConfigs:IListFilterOptions[]):(item:any) => boolean {\n\n    var self = this;\n\n    filterConfigs = (filterConfigs || []).map((opt) => {\n\n        return utils.extend({\n            condition: '',\n            extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(this),\n            filterFn: self.equalsFilter.bind(this)\n        }, opt);\n\n    });\n\n    return (item):boolean => {\n\n        return <boolean>filterConfigs.reduce((pass, opt) => {\n\n            if (!pass || !opt.condition) return pass;\n            return opt.filterFn(opt.extractFn(item, opt), opt);\n\n        }, true);\n\n    };\n\n}\n\nexport interface IListComparatorOptions {\n    sortBy?:string;\n    extractFn?:(object:any, options?:IListComparatorOptions|any)=>any;\n    compareFn?:(a:any, b:any, options?:IListComparatorOptions|any)=>number;\n}\n\nexport interface IListFilterOptions {\n    filterBy?:string;\n    condition?:any|string|RegExp;\n    extractFn?:(object:any, options?:IListFilterOptions|any)=>any;\n    filterFn?:(object:any, options?:IListFilterOptions|any)=>any;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/List.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as validator from '../core/Validator';\nimport * as list from '../core/List';\nimport * as utils from '../core/Utils';\nimport * as helper from '../core/Helper';\nimport * as extension from './Extension';\n\nexport class Presence extends helper.Helper {\n\n    createUrl(options?:IPresenceOptions, id?:string) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n\n    }\n\n    getId(presence:IPresence) {\n        return presence && (extension.extension.getId(presence.extension) || presence.extensionId);\n    }\n\n    isAvailable(presence:IPresence) {\n        return presence && presence.presenceStatus == 'Available';\n    }\n\n    addEventToSubscription(subscription, options?:IPresenceOptions, id?:string) { //TODO Type\n\n        return subscription.setEventFilters([this.createUrl(options, id)]);\n\n    }\n\n    updateSubscription(subscription, //TODO Type\n                       presences:IPresence[],\n                       options?:IPresenceOptions) {\n\n        var events = presences.map(this.getId, this).map((id) => {\n            return this.createUrl(options, id);\n        }, this);\n\n        subscription.addEventFilters(events);\n\n        return subscription;\n\n    }\n\n    attachToExtensions(extensions:extension.IExtension[], presences:IPresence[], merge?:boolean) {\n\n        var index = this.index(presences);\n\n        extensions.forEach((ex:extension.IExtension) => {\n\n            var presence = index[extension.extension.getId(ex)];\n\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    utils.extend(ex.presence, presence);\n                } else {\n                    ex.presence = presence;\n                }\n            }\n\n        }, this);\n\n        return this;\n\n    }\n\n    isCallInProgress(presenceCall:IPresenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    }\n\n\n}\n\nexport var presence = new Presence();\n\nexport interface IPresence extends helper.IHelperObject {\n    extension?:extension.IExtension;\n    activeCalls?:IPresenceCall[];\n    presenceStatus?:string; // Offline, Busy, Available\n    telephonyStatus?:string; // NoCall, CallConnected, Ringing, OnHold\n    userStatus?:string; // Offline, Busy, Available\n    dndStatus?:string; // TakeAllCalls, DoNotAcceptAnyCalls, DoNotAcceptDepartmentCalls, TakeDepartmentCallsOnly\n    allowSeeMyPresence?:boolean;\n    ringOnMonitoredCall?:boolean;\n    pickUpCallsOnHold?:boolean;\n    extensionId?:string;\n    sequence?:number;\n}\n\nexport interface IPresenceCall {\n    direction?:string;\n    from?:string;\n    to?:string;\n    sessionId?:string;\n    id?:string;\n    telephonyStatus?:string;\n}\n\nexport interface IPresenceOptions {\n    detailed?:boolean;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Presence.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as list from '../core/List';\nimport * as utils from '../core/Utils';\nimport * as validator from '../core/Validator';\nimport * as contact from './Contact';\nimport * as service from './Service';\nimport * as country from './Country';\nimport * as timezone from './Timezone';\nimport * as language from './Language';\nimport * as presence from './Presence';\n\nexport class Extension extends helper.Helper {\n\n    type = {\n        department: 'Department',\n        user: 'User',\n        announcement: 'Announcement',\n        voicemail: 'Voicemail'\n    };\n\n    createUrl(options?:IExtensionOptions, id?:string) {\n\n        options = options || {};\n\n        return '/account/~' +\n               (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n               (id ? '/' + id : '');\n\n    }\n\n    isUser(extension?:IExtension) {\n        return extension && extension.type == this.type.user;\n    }\n\n    isDepartment(extension?:IExtension) {\n        return extension && extension.type == this.type.department;\n    }\n\n    isAnnouncement(extension?:IExtension) {\n        return extension && extension.type == this.type.announcement;\n    }\n\n    isVoicemail(extension?:IExtension) {\n        return extension && extension.type == this.type.voicemail;\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        return list.comparator(utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: list.numberComparator\n        }, options));\n\n    }\n\n    filter(options?:IExtensionFilterOptions) {\n\n        options = utils.extend({\n            search: '',\n            type: ''\n        }, options);\n\n        return list.filter([\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: list.containsFilter,\n                extractFn: (item) => {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                           (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n\n    }\n\n}\n\nexport var extension = new Extension();\n\nexport interface IExtensionOptions {\n    departmentId?:string;\n}\n\nexport interface IExtensionFilterOptions {\n    search?:string;\n    type?:string;\n}\n\nexport interface IExtensionRegionalSettings {\n    timezone?:timezone.ITimezone;\n    language?:language.ILanguage;\n    homeCountry?:country.ICountry;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ShortExtensionInfo\n */\nexport interface IExtensionShort extends helper.IHelperObject {\n    extensionNumber?:string;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ExtensionInfo\n */\nexport interface IExtension extends helper.IHelperObject {\n    extensionNumber?:string;\n    name?:string;\n    type?:string;\n    status?:string;\n    setupWizardState?:string;\n    contact?:contact.IContactBrief;\n    regionalSettings?:IExtensionRegionalSettings;\n    serviceFeatures?:service.IServiceFeature[];\n    presence?:presence.IPresence; // added by helper\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Extension.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as call from './Call';\nimport * as list from '../core/List';\nimport * as utils from '../core/Utils';\nimport * as validator from '../core/Validator';\n\nexport class Contact extends helper.Helper {\n\n    createUrl(options?:IContactOptions, id?:string) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' +\n                   (options.extensionId ? options.extensionId : '~') +\n                   '/address-book';\n\n        if (options.sync) return root + '-sync';\n\n        return root +\n               (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n               (id ? '/' + id : '');\n\n    }\n\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    protected getFieldValues(where:IContact, fields?:string[], asHash?:boolean):any {\n\n        return fields.reduce((result:string[], field:string) => {\n\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                } else {\n                    result.push(where[field]);\n                }\n            }\n\n            return result;\n\n        }, asHash ? {} : []);\n\n    }\n\n    getFullName(contact:IContact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    }\n\n    getEmails(contact:IContact, asHash?:boolean):string[] {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    }\n\n    getPhones(contact:IContact, asHash?:boolean):string[] {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    }\n\n    getFaxes(contact:IContact, asHash?:boolean):string[] {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    }\n\n    getAddresses(contact:IContact, asHash?:boolean):IContactAddress[] {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    }\n\n    isAlive(contact:IContact) {\n        return (contact.availability == 'Alive');\n    }\n\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    match(contact:IContact, string:string, options?:IContactMatchOptions):any {\n\n        options = utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: (value, options) => {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n\n        string = options.transformFn(string, options);\n\n        var found = null;\n\n        if (!string) return found;\n\n        var matchWith = (value) => {\n\n            // skip unnecessary cycles if match has been found\n            if (found) return;\n\n            var transformed = options.transformFn(value, options);\n\n            if (!transformed) return;\n\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n\n            if (match) found = value;\n\n        };\n\n        // Search in fields\n        options.fields.forEach((field) => {\n            matchWith(contact[field]);\n        });\n\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found) this.addressFields.forEach((field) => {\n\n            // skip unnecessary cycles if match has been found or no field value\n            if (!contact[field] || found) return;\n\n            this.addressSubFields.forEach((subField) => {\n                matchWith(contact[field][subField]);\n            });\n\n        });\n\n        return found;\n\n    }\n\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    matchAsPhone(contact:IContact, phone:string, options?:IContactMatchOptions) {\n\n        return this.match(contact, phone, utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: (value, options) => {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n\n    }\n\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    attachToCallerInfos(callerInfos:call.ICallerInfo[], contacts:IContact[], options?:IContactMatchOptions) {\n\n        var self = this,\n            callerInfoIndex = this.index(callerInfos, (callerInfo:call.ICallerInfo) => {\n                return callerInfo.phoneNumber;\n            }, true);\n\n        utils.forEach(callerInfoIndex, (indexedCallerInfos, phoneNumber) => {\n\n            var foundContact:IContact = null,\n                foundPhone = null;\n\n            contacts.some((contact:IContact) => {\n\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n\n                if (foundPhone) foundContact = contact;\n\n                return foundPhone;\n\n            });\n\n            if (foundContact) {\n\n                indexedCallerInfos.forEach((callerInfo:call.ICallerInfo) => {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n\n            }\n\n        });\n\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        return list.comparator(utils.extend({\n            extractFn: (contact:IContact, options) => {\n                return this.getFullName(contact);\n            }\n        }, options));\n\n    }\n\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    filter(options?:IContactFilterOptions) {\n\n        options = utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n\n        return list.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {condition: options.startsWith, filterFn: (item, opts) => { return this.match(item, opts.condition); }},\n            {condition: options.phonesOnly, filterFn: (item, opts) => { return (this.getPhones(item).length > 0); }},\n            {condition: options.faxesOnly, filterFn: (item, opts) => { return (this.getFaxes(item).length > 0); }}\n        ]);\n\n    }\n\n    validate(item:IContact) {\n\n        return validator.validate([\n            {field: 'firstName', validator: validator.required(item.firstName)},\n            {field: 'lastName', validator: validator.required(item.lastName)},\n            {field: 'email', validator: validator.email(item.email)},\n            {field: 'email2', validator: validator.email(item.email2)},\n            {field: 'email3', validator: validator.email(item.email3)}\n        ]);\n\n    }\n\n    phoneFields = [\n        'homePhone',\n        'homePhone2',\n        'businessPhone',\n        'businessPhone2',\n        'mobilePhone',\n        'companyPhone',\n        'assistantPhone',\n        'carPhone',\n        'otherPhone',\n        'callbackPhone'\n    ];\n\n    faxFields = [\n        'businessFax',\n        'otherFax'\n    ];\n\n    addressFields = [\n        'homeAddress',\n        'businessAddress',\n        'otherAddress'\n    ];\n\n    addressSubFields = [\n        'street',\n        'city',\n        'state',\n        'zip'\n    ];\n\n    nameFields = [\n        'firstName',\n        'middleName',\n        'lastName',\n        'nickName'\n    ];\n\n    otherFields = [\n        'company',\n        'jobTitle',\n        'webPage',\n        'notes'\n    ];\n\n    emailFields = [\n        'email',\n        'email2',\n        'email3'\n    ];\n\n\n}\n\nexport var contact = new Contact();\n\nexport interface IContactOptions {\n    extensionId?:string;\n    groupId?:string;\n    sync?:boolean;\n}\n\nexport interface IContactFilterOptions {\n    startsWith?:string;\n    alive?:boolean;\n    phonesOnly?:boolean;\n    faxesOnly?:boolean;\n}\n\nexport interface IContactMatchOptions {\n    transformFn?:(object:IContact, options?:IContactMatchOptions)=>any;\n    strict?:boolean;\n    inAddresses?:boolean;\n    fields?:string[];\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactAddressInfo\n */\nexport interface IContactAddress {\n    country?:string;\n    street?:string;\n    city?:string;\n    state?:string;\n    zip?:string;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/latest/webhelp/dev_guide_advanced/ch18s04.html#ContactInfo\n */\nexport interface IContactBrief {\n    firstName?:string;\n    lastName?:string;\n    company?:string;\n    email?:string;\n    businessAddress?:IContactAddress;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch16s04.html#ContactInfo\n */\nexport interface IContact extends helper.IHelperObject {\n    availability?:string;\n\n    // Names:\n    firstName?:string;\n    lastName?:string;\n    company?:string;\n    nickName?:string;\n    middleName?:string;\n\n    // Emails:\n    email?:string;\n    email2?:string;\n    email3?:string;\n\n    // Addresses:\n    businessAddress?:IContactAddress;\n    homeAddress?:IContactAddress;\n    otherAddress?:IContactAddress;\n\n    // Phones:\n    homePhone?:string;\n    homePhone2?:string;\n    businessPhone?:string;\n    businessPhone2?:string;\n    mobilePhone?:string;\n    companyPhone?:string;\n    assistantPhone?:string;\n    carPhone?:string;\n    otherPhone?:string;\n    callbackPhone?:string;\n\n    // Faxes:\n    businessFax?:string;\n    otherFax?:string;\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Contact.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as validator from '../core/Validator';\n\nexport class ContactGroup extends helper.Helper {\n\n    createUrl(options?:any, id?:string) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    }\n\n    validate(item:IContactGroup) {\n\n        return validator.validate([\n            {field: 'groupName', validator: validator.required(item && item.groupName)}\n        ]);\n\n    }\n\n}\n\nexport interface IContactGroup extends helper.IHelperObject {\n    notes?:string;\n    groupName?:string;\n    contactsCount?:number;\n}\n\nexport var contactGroup = new ContactGroup();\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/ContactGroup.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\n\nexport class Conferencing extends helper.Helper {\n\n    createUrl() {\n        return '/account/~/extension/~/conferencing';\n    }\n\n}\n\nexport var conferencing = new Conferencing();\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Conferencing.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\n\nexport class Country extends helper.Helper {\n\n    createUrl(options?:any, id?:string) {\n        return '/dictionary/country';\n    }\n\n}\n\nexport var country = new Country();\n\nexport interface ICountry extends helper.IHelperObject {\n    name?:string;\n    isoCode?:string;\n    callingCode?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Country.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as list from '../core/List';\nimport * as utils from '../core/Utils';\nimport * as validator from '../core/Validator';\nimport * as extension from './Extension';\nimport * as deviceModel from './DeviceModel';\nimport * as shippingMethod from './ShippingMethod';\nimport * as phoneNumber from './PhoneNumber';\n\nexport class Device extends helper.Helper {\n\n    createUrl(options?:IDeviceOptions, id?:string) {\n\n        options = options || {};\n\n        if (options.order) return '/account/~/order';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/device' +\n               (id ? '/' + id : '');\n\n    }\n\n    /**\n     * @param {IDevice} item\n     */\n    validate(item:IDevice) {\n\n        return validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            {field: 'extension', validator: validator.required(extension.extension.getId(item && item.extension))},\n            {field: 'model', validator: validator.required(deviceModel.deviceModel.getId(item && item.model))}\n        ]);\n\n    }\n\n}\n\nexport var device = new Device();\n\nexport interface IContactGroup extends helper.IHelperObject {\n    notes?:string;\n    groupName?:string;\n    contactsCount?:number;\n}\n\nexport interface IDevice extends helper.IHelperObject {\n    type?:string;\n    name?:string;\n    serial?:string;\n    model?:deviceModel.IDeviceModel;\n    extension?:extension.IExtensionShort; //TODO IExtension?\n    emergencyServiceAddress?:IDeviceAddress;\n    shipping?:IDeviceShipping;\n    phoneLines?:IDevicePhoneLine[];\n}\n\nexport interface IDeviceOrder {\n    devices?:IDevice[];\n}\n\nexport interface IDeviceAddress {\n    street?:string;\n    street2?:string;\n    city?:string;\n    state?:string;\n    country?:string;\n    zip?:string;\n    customerName?:string;\n}\n\nexport interface IDeviceShipping {\n    address?:IDeviceAddress;\n    method?:shippingMethod.IShippingMethod;\n    status?:string;\n}\n\nexport interface IDevicePhoneLine {\n    lineType?:string;\n    phoneInfo?:phoneNumber.IPhoneNumber;\n}\n\nexport interface IDeviceOptions {\n    extensionId?:string;\n    order?:boolean;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Device.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\n\nexport class DeviceModel extends helper.Helper {\n\n\n    getId(device:IDeviceModel) {\n\n        return device ? device.sku : null;\n\n    }\n\n    createUrl(options?:any, id?:string) {\n\n        return '/dictionary/device';\n\n    }\n\n}\n\nexport var deviceModel = new DeviceModel();\n\nexport interface IDeviceModel extends helper.IHelperObject {\n    sku?:string;\n    type?:string;\n    model?:{\n        id?:string;\n        name?:string;\n        deviceClass?:string;\n        lineCount?:number;\n        addons?:IDeviceModelAddon[];\n    };\n}\n\nexport interface IDeviceModelAddon extends helper.IHelperObject {\n    name?:string;\n    count?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/DeviceModel.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as list from '../core/List';\nimport * as utils from '../core/Utils';\n\nexport class ForwardingNumber extends helper.Helper {\n\n    createUrl(options?:{extensionId?:string}, id?:string) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n\n    }\n\n    getId(forwardingNumber:IForwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    }\n\n    hasFeature(phoneNumber:IForwardingNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        return list.comparator(utils.extend({\n            sortBy: 'label'\n        }, options));\n\n    }\n\n    filter(options?:{features:string[]}) {\n\n        options = utils.extend({\n            features: []\n        }, options);\n\n        return list.filter([{\n            condition: options.features.length,\n            filterFn: (item) => {\n\n                return options.features.some((feature) => {\n                    return this.hasFeature(item, feature);\n                });\n\n            }\n        }]);\n\n    }\n\n}\n\nexport var forwardingNumber = new ForwardingNumber();\n\nexport interface IForwardingNumber extends helper.IHelperObject {\n    label?:string;\n    phoneNumber?:string;\n    flipNumber?:string;\n    features?:string[];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/ForwardingNumber.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\n\nexport class Language extends helper.Helper {\n\n    createUrl(options?:any, id?:string) {\n\n        return '/dictionary/language';\n\n    }\n\n}\n\nexport var language = new Language();\n\nexport interface ILanguage extends helper.IHelperObject {\n    name?:string;\n    isoCode?:string;\n    localeCode?:string;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Language.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as list from '../core/List';\nimport * as utils from '../core/Utils';\nimport * as validator from '../core/Validator';\nimport * as state from './State';\n\nexport class Location extends helper.Helper {\n\n    createUrl() {\n        return '/dictionary/location';\n    }\n\n    filter(options?:ILocationFilterOptions) {\n\n        var uniqueNPAs = [];\n\n        options = utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n\n        return list.filter([\n            {\n                condition: options.stateId,\n                filterFn: (item:ILocation, opts) => {\n                    return (state.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: (item:ILocation, opts) => {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    } else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        options = utils.extend({\n            sortBy: 'npa'\n        }, options);\n\n        if (options.sortBy == 'nxx') {\n\n            options.extractFn = (item:ILocation) => {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n\n            options.compareFn = list.numberComparator;\n\n        }\n\n        return list.comparator(options);\n\n    }\n\n}\n\nexport var location = new Location();\n\nexport interface ILocation extends helper.IHelperObject {\n    name?:string;\n    isoCode?:string;\n    npa?:string;\n    nxx?:string;\n    state?:state.IState;\n}\n\nexport interface ILocationFilterOptions {\n    stateId?:string;\n    onlyUniqueNPA?:boolean;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Location.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as validator from '../core/Validator';\nimport * as helper from '../core/Helper';\nimport * as utils from '../core/Utils';\nimport * as list from '../core/List';\nimport * as country from './Country';\n\nexport class State extends helper.Helper {\n\n    createUrl() {\n        return '/dictionary/state';\n    }\n\n    filter(options?:IStateOptions) {\n\n        options = utils.extend({\n            countryId: ''\n        }, options);\n\n        return list.filter([\n            {\n                condition: options.countryId,\n                filterFn: (item:IState, opts) => {\n                    return (country.country.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n\n    }\n\n}\n\nexport var state = new State();\n\nexport interface IState extends helper.IHelperObject {\n    name?:string;\n    isoCode?:string;\n    country?:country.ICountry;\n}\n\nexport interface IStateOptions {\n    countryId?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/State.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as list from '../core/List';\nimport * as utils from '../core/Utils';\nimport * as validator from '../core/Validator';\nimport * as contact from './Contact';\nimport * as call from './Call';\n\nexport class Message extends helper.Helper {\n\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    createUrl(options?:IMessageOptions, id?:string|number) {\n\n        options = options || {};\n\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n\n        if (options.fax) return root + '/fax';\n        if (options.sms) return root + '/sms';\n        if (options.pager) return root + '/company-pager';\n        if (options.sync) return root + '/message-sync';\n\n        return root + '/message-store' + (id ? '/' + id : '');\n\n    }\n\n    isInbound(message):IMessage {\n        return (message && message.direction == 'Inbound');\n    }\n\n    isOutbound(message):IMessage {\n        return !this.isInbound(message);\n    }\n\n    isSMS(message:IMessage) {\n        return (message && message.type == 'SMS');\n    }\n\n    isPager(message:IMessage):IMessage {\n        return (message && message.type == 'Pager');\n    }\n\n    isVoiceMail(message:IMessage) {\n        return (message && message.type == 'VoiceMail');\n    }\n\n    isFax(message:IMessage) {\n        return (message && message.type == 'Fax');\n    }\n\n    isAlive(message:IMessage) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    }\n\n    isRead(message:IMessage) {\n        return (message.readStatus == 'Read');\n    }\n\n    setIsRead(message:IMessage, isRead:boolean):IMessage {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    }\n\n    getAttachmentContentType(message:IMessage, i:number) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    }\n\n    addEventToSubscription(subscription, options?:IMessageOptions) { //TODO Type\n\n        return subscription.setEventFilters([this.createUrl(options)]);\n\n    }\n\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    getCallerInfos(message:IMessage):call.ICallerInfo[] {\n        return this.isInbound(message) ? [message.from] : message.to;\n    }\n\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    getAllCallerInfos(message:IMessage):call.ICallerInfo[] {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    }\n\n    /**\n     * TODO Compare as dates\n     */\n    comparator(options?:list.IListComparatorOptions) {\n\n        return list.comparator(utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n\n    }\n\n    filter(options?:IMessageFilterOptions) {\n\n        options = utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n\n        return list.filter([\n            {condition: options.alive, filterFn: this.isAlive},\n            {filterBy: 'type', condition: options.type},\n            {filterBy: 'direction', condition: options.direction},\n            {filterBy: 'conversationId', condition: options.conversationId},\n            {filterBy: 'readStatus', condition: options.readStatus},\n            {filterBy: 'subject', condition: options.search, filterFn: list.containsFilter}\n        ]);\n\n    }\n\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    attachContacts(contacts:contact.IContact[], messages:IMessage[], options?:contact.IContactMatchOptions) {\n\n        var self = this;\n\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce((callerInfos, message) => {\n\n            return callerInfos.concat(self.getAllCallerInfos(message));\n\n        }, []);\n\n        contact.contact.attachToCallerInfos(callerInfos, contacts, options);\n\n    }\n\n    shorten(message:IMessage):IMessageShort {\n\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n\n    }\n\n    validateSMS(item:IMessage) {\n\n        return validator.validate([\n            {field: 'to', validator: validator.required(utils.getProperty(item, 'to[0].phoneNumber'))},\n            {field: 'from', validator: validator.required(utils.getProperty(item, 'from.phoneNumber'))},\n            {field: 'subject', validator: validator.required(utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: validator.length(utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    }\n\n    validatePager(item:IMessage) {\n\n        return validator.validate([\n            {field: 'to', validator: validator.required(utils.getProperty(item, 'to.extensionNumber'))},\n            {field: 'from', validator: validator.required(utils.getProperty(item, 'from.extensionNumber'))},\n            {field: 'subject', validator: validator.required(utils.getProperty(item, 'subject'))},\n            {field: 'subject', validator: validator.length(utils.getProperty(item, 'subject'), 160)}\n        ]);\n\n    }\n\n}\n\nexport var message = new Message();\n\nexport interface IMessage extends helper.IHelperObject {\n    to?:call.ICallerInfo[];\n    from?:call.ICallerInfo;\n    type?:string;\n    creationTime?:string;\n    readStatus?:string;\n    priority?:string;\n    attachments?:IMessageAttachment[];\n    direction?:string;\n    availability?:string;\n    subject?:string;\n    messageStatus?:string;\n    conversationId?:string;\n    lastModifiedTime?:string;\n}\n\nexport interface IMessageShort {\n    to?:call.ICallerInfo[];\n    from?:call.ICallerInfo;\n    text?:string;\n}\n\nexport interface IMessageOptions {\n    fax?:boolean;\n    sync?:boolean;\n    sms?:boolean;\n    pager?:boolean;\n    extensionId?:string;\n}\n\nexport interface IMessageFilterOptions {\n    alive?:boolean;\n    conversationId?:string;\n    direction?:string;\n    readStatus?:string;\n    type?:string;\n    search?:string;\n}\n\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n */\nexport interface IMessageFaxAttachment extends helper.IHelperObject {\n    contentType?:string;\n    content?:string;\n    fileName?:string;\n}\n/**\n * @see http://platform-dev.dins.ru/artifacts/documentation/webhelp/dev_guide/content/ch18s01.html#MessageAttachmentInfo\n */\nexport interface IMessageAttachment extends helper.IHelperObject {\n    contentType?:string;\n    vmDuration?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Message.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as list from '../core/List';\nimport * as utils from '../core/Utils';\nimport * as extension from './Extension';\n\nexport class PhoneNumber extends helper.Helper {\n\n    public tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n\n    createUrl(options?:IPhoneNumberOptions, id?:string) {\n\n        options = options || {};\n\n        if (options.lookup) return '/number-pool/lookup';\n\n        return '/account/~' +\n               (options.extensionId ? '/extension/' + options.extensionId : '') +\n               '/phone-number' +\n               (id ? '/' + id : '');\n\n    }\n\n    isSMS(phoneNumber:IPhoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    }\n\n    hasFeature(phoneNumber:IPhoneNumber, feature:string) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    }\n\n    reserve(phoneNumber:IPhoneNumber, date:any) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    }\n\n    unreserve(phoneNumber:IPhoneNumber) {\n        phoneNumber.reservedTill = null;\n    }\n\n    comparator(options?:list.IListComparatorOptions) {\n\n        return list.comparator(utils.extend({\n            extractFn: (item:IPhoneNumber) => {\n                return item.usageType + '-' +\n                       item.paymentType + '-' +\n                       item.type;\n            }\n        }, options));\n\n    }\n\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    filter(options?:IPhoneNumberFilterOptions) {\n\n        options = utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n\n        return list.filter([\n            {filterBy: 'usageType', condition: options.usageType},\n            {filterBy: 'paymentType', condition: options.paymentType},\n            {filterBy: 'type', condition: options.type},\n            {\n                condition: options.features.length,\n                filterFn: (item:IPhoneNumber) => {\n\n                    return options.features.some((feature:string) => {\n                        return this.hasFeature(item, feature);\n                    });\n\n                }\n            }\n        ]);\n\n    }\n\n}\n\nexport var phoneNumber = new PhoneNumber();\n\nexport interface IPhoneNumber extends helper.IHelperObject {\n    phoneNumber?:string;\n    paymentType?:string; // External, TollFree, Local\n    location?:string;\n    type?:string; // VoiceFax, FaxOnly, VoiceOnly\n    usageType?:string; // CompanyNumber, DirectNumber, CompanyFaxNumber, ForwardedNumber\n    features?:string[]; // CallerId, SmsSender\n    reservedTill?:string;\n    error?:string;\n}\n\nexport interface IPhoneNumberOptions {\n    extensionId?:string;\n    lookup?:boolean;\n    countryId?:string;\n    paymentType?:string;\n    npa?:string;\n    nxx?:string;\n    line?:string;\n    exclude?:string;\n}\n\nexport interface IPhoneNumberFilterOptions {\n    paymentType?:string;\n    usageType?:string;\n    type?:string;\n    features?:string[];\n}\n\nexport interface IPhoneNumberOrder {\n    records?:IPhoneNumber[];\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/PhoneNumber.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\nimport * as validator from '../core/Validator';\nimport * as call from './Call';\n\nexport class Ringout extends helper.Helper {\n\n    createUrl(options?:{extensionId?:string}, id?:string) {\n\n        options = options || {};\n\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n\n    }\n\n    resetAsNew(object:IRingout) {\n        object = super.resetAsNew(object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    }\n\n    isInProgress(ringout:IRingout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    }\n\n    isSuccess(ringout:IRingout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    }\n\n    isError(ringout:IRingout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    }\n\n    validate(item:IRingout) {\n\n        return validator.validate([\n            {field: 'to', validator: validator.required(item && item.to && item.to.phoneNumber)},\n            {field: 'from', validator: validator.required(item && item.from && item.from.phoneNumber)}\n        ]);\n\n    }\n\n}\n\nexport var ringout = new Ringout();\n\nexport interface IRingout extends helper.IHelperObject {\n    from?:call.ICallerInfo; // (!) ONLY PHONE NUMBER\n    to?:call.ICallerInfo; // (!) ONLY PHONE NUMBER\n    callerId?:call.ICallerInfo; // (!) ONLY PHONE NUMBER\n    playPrompt?:boolean;\n    status?:{\n        callStatus?:string;\n        callerStatus?:string;\n        calleeStatus?:string\n    };\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Ringout.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\n\nexport class Service extends helper.Helper {\n\n    createUrl() {\n        return '/account/~/service-info';\n    }\n\n    isEnabled(feature:string, serviceFeatures:IServiceFeature[]) {\n\n        return serviceFeatures.reduce((value, f) => {\n\n            if (f.featureName == feature) value = f.enabled;\n            return value;\n\n        }, false);\n\n    }\n\n    isServiceFeatureEnabledMethod(feature) {\n        return (serviceFeatures) => {\n            return this.isEnabled(feature, serviceFeatures);\n        };\n    }\n\n    isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n    isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n    isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n    isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n    isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n    isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n    isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n    isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n    isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n    isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n    isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n    isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n    isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n    isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n    isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n    isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n    isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n    isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n    isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n    isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n    isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n\n}\n\nexport var service = new Service();\n\nexport interface IService extends helper.IHelperObject {\n    serviceFeatures?:IServiceFeature[];\n    servicePlanName?:string;\n}\n\nexport interface IServiceFeature {\n    featureName?:string;\n    enabled?:boolean;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Service.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\n\nexport class ShippingMethod extends helper.Helper {\n\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    createUrl() {\n        return '/dictionary/shipping-options';\n    }\n\n}\n\nexport var shippingMethod = new ShippingMethod();\n\nexport interface IShippingMethodOptions {\n    quantity?:number;\n    servicePlanId?:number;\n    brandId?:number;\n}\n\nexport interface IShippingMethodInfo {\n    quantity?:string;\n    price?:string;\n    method?:IShippingMethod;\n}\n\n/**\n * @discrepancy Methods does not have URI\n */\nexport interface IShippingMethod extends helper.IHelperObject {\n    id?:string;\n    name?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/ShippingMethod.ts\n **/","/// <reference path=\"../externals.d.ts\" />\n\nimport * as helper from '../core/Helper';\n\nexport class Timezone extends helper.Helper {\n\n    createUrl() {\n        return '/dictionary/timezone';\n    }\n\n}\n\nexport var timezone = new Timezone();\n\nexport interface ITimezone extends helper.IHelperObject {\n    name?:string;\n    description?:string;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/Timezone.ts\n **/"],"sourceRoot":"/source/"}