{"version":3,"sources":["webpack/universalModuleDefinition","ringcentral-helpers.js","webpack/bootstrap c5802e40253841454a3e","src/SDK.ts","src/core/Validator.ts","src/core/List.ts","src/core/Utils.ts","src/helpers/Account.ts","src/core/Helper.ts","src/helpers/BlockedNumber.ts","src/helpers/Call.ts","src/helpers/Contact.ts","src/helpers/ContactGroup.ts","src/helpers/Conferencing.ts","src/helpers/Country.ts","src/helpers/Device.ts","src/helpers/DeviceModel.ts","src/helpers/Extension.ts","src/helpers/ForwardingNumber.ts","src/helpers/Language.ts","src/helpers/Location.ts","src/helpers/Message.ts","src/helpers/PhoneNumber.ts","src/helpers/Presence.ts","src/helpers/Ringout.ts","src/helpers/Service.ts","src/helpers/ShippingMethod.ts","src/helpers/State.ts","src/helpers/Timezone.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","validator","list","utils","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","RingCentralHelpers","version","_utils","Utils","_validator","Validator","_list","List","_account","Account","_blockedNumber","BlockedNumber","_conferencing","Conferencing","_contact","Contact","_contactGroup","ContactGroup","_country","Country","_extension","Extension","_deviceModel","DeviceModel","_device","Device","_presence","Presence","_call","Call","_forwardingNumber","ForwardingNumber","_language","Language","_state","State","_location","Location","_message","Message","_phoneNumber","PhoneNumber","_ringout","Ringout","_service","Service","_shippingMethod","ShippingMethod","_timezone","Timezone","prototype","country","deviceModel","language","location","shippingMethod","state","timezone","account","blockedNumber","conferencing","contact","contactGroup","device","extension","forwardingNumber","message","phoneNumber","presence","ringout","service","validate","validators","result","errors","isValid","reduce","res","length","field","concat","email","value","multiple","_this","isEmail","Error","phone","isPhoneNumber","required","max","min","toString","push","numberComparator","bind","stringComparator","propertyExtractor","property","item","options","a","b","parseString","localeCompare","parseNumber","comparator","extend","extractFn","sortBy","compareFn","item1","item2","equalsFilter","obj","condition","containsFilter","indexOf","regexpFilter","RegExp","test","filter","filterConfigs","self","map","opt","filterBy","filterFn","pass","hasOwn","Object","hasOwnProperty","rdigit","class2type","split","forEach","name","toLowerCase","targetObject","sourceObject","args","_i","arguments","src","copy","copyIsArray","clone","target","i","deep","isFunction","isPlainObject","isArray","undefined","object","cb","queryStringify","parameters","array","v","vv","encodeURIComponent","join","parseQueryString","queryString","argsParsed","arg","decodeURIComponent","trim","pair","key","argumentsToArray","Array","slice","isDate","type","isWindow","isNaN","String","nodeType","constructor","getProperty","part","poll","fn","interval","timeout","stopPolling","next","delay","setTimeout","clearTimeout","s","n","parseFloat","__extends","d","__","create","helper","_super","apply","createUrl","Helper","defaultProperty","getId","isNew","getUri","resetAsNew","uri","parseMultipartResponse","ajax","isMultipart","data","error","loadRequest","url","method","saveRequest","post","body","deleteRequest","syncRequest","sync","query","get","syncToken","syncType","nextPageExists","navigation","index","getIdFn","gather","merge","supplement","mergeItems","supplementIndex","updatedIDs","newItem","extensionId","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","parseInt","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","getTime","dateString","Date","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","some","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","replace","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","phoneFields","faxFields","addressFields","addressSubFields","nameFields","otherFields","emailFields","groupId","getFieldValues","where","fields","asHash","getFullName","getEmails","getPhones","getFaxes","getAddresses","match","string","inAddresses","transformFn","toLocaleLowerCase","found","matchWith","transformed","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","opts","firstName","lastName","email2","email3","groupName","order","emergencyServiceAddress","street","city","zip","customerName","model","sku","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","extensionNumber","hasFeature","feature","features","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentContentType","attachments","contentType","addEventToSubscription","subscription","setEventFilters","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","tollFreeAreaCodes","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","detailed","isAvailable","presenceStatus","updateSubscription","presences","events","addEventFilters","attachToExtensions","extensions","ex","presenceCall","status","callStatus","isSuccess","isError","isSmsEnabled","isServiceFeatureEnabledMethod","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","isEnabled","serviceFeatures","f","featureName","enabled","countryId"],"mappings":"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","file":"ringcentral-helpers.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Helpers\"] = factory();\n\telse\n\t\troot[\"RingCentral\"] = root[\"RingCentral\"] || {}, root[\"RingCentral\"][\"Helpers\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Helpers\"] = factory();\n\telse\n\t\troot[\"RingCentral\"] = root[\"RingCentral\"] || {}, root[\"RingCentral\"][\"Helpers\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"./externals.d.ts\" />\nvar validator = __webpack_require__(2);\nvar list = __webpack_require__(3);\nvar utils = __webpack_require__(4);\nvar accountHelper = __webpack_require__(5);\nvar blockedNumberHelper = __webpack_require__(7);\nvar callHelper = __webpack_require__(8);\nvar contactHelper = __webpack_require__(9);\nvar contactGroupHelper = __webpack_require__(10);\nvar conferencingHelper = __webpack_require__(11);\nvar countryHelper = __webpack_require__(12);\nvar deviceHelper = __webpack_require__(13);\nvar deviceModelHelper = __webpack_require__(14);\nvar extensionHelper = __webpack_require__(15);\nvar forwardingNumberHelper = __webpack_require__(16);\nvar languageHelper = __webpack_require__(17);\nvar locationHelper = __webpack_require__(18);\nvar messageHelper = __webpack_require__(19);\nvar phoneNumberHelper = __webpack_require__(20);\nvar presenceHelper = __webpack_require__(21);\nvar ringoutHelper = __webpack_require__(22);\nvar serviceHelper = __webpack_require__(23);\nvar shippingMethodHelper = __webpack_require__(24);\nvar stateHelper = __webpack_require__(25);\nvar timezoneHelper = __webpack_require__(26);\nvar RingCentralHelpers = (function () {\n    function RingCentralHelpers() {\n        this.version = '0.1.0';\n        this._utils = new utils.Utils();\n        this._validator = new validator.Validator(this._utils);\n        this._list = new list.List(this._utils);\n        this._account = new accountHelper.Account(this._utils, this._validator, this._list);\n        this._blockedNumber = new blockedNumberHelper.BlockedNumber(this._utils, this._validator, this._list);\n        this._conferencing = new conferencingHelper.Conferencing(this._utils, this._validator, this._list);\n        this._contact = new contactHelper.Contact(this._utils, this._validator, this._list);\n        this._contactGroup = new contactGroupHelper.ContactGroup(this._utils, this._validator, this._list);\n        this._country = new countryHelper.Country(this._utils, this._validator, this._list);\n        this._extension = new extensionHelper.Extension(this._utils, this._validator, this._list);\n        this._deviceModel = new deviceModelHelper.DeviceModel(this._utils, this._validator, this._list);\n        this._device = new deviceHelper.Device(this._utils, this._validator, this._list, this._extension, this._deviceModel);\n        this._presence = new presenceHelper.Presence(this._utils, this._validator, this._list, this._extension);\n        this._call = new callHelper.Call(this._utils, this._validator, this._list, this._presence, this._contact);\n        this._forwardingNumber = new forwardingNumberHelper.ForwardingNumber(this._utils, this._validator, this._list);\n        this._language = new languageHelper.Language(this._utils, this._validator, this._list);\n        this._state = new stateHelper.State(this._utils, this._validator, this._list, this._country);\n        this._location = new locationHelper.Location(this._utils, this._validator, this._list, this._state);\n        this._message = new messageHelper.Message(this._utils, this._validator, this._list, this._contact);\n        this._phoneNumber = new phoneNumberHelper.PhoneNumber(this._utils, this._validator, this._list);\n        this._ringout = new ringoutHelper.Ringout(this._utils, this._validator, this._list);\n        this._service = new serviceHelper.Service(this._utils, this._validator, this._list);\n        this._shippingMethod = new shippingMethodHelper.ShippingMethod(this._utils, this._validator, this._list);\n        this._timezone = new timezoneHelper.Timezone(this._utils, this._validator, this._list);\n    }\n    RingCentralHelpers.prototype.country = function () { return this._country; };\n    RingCentralHelpers.prototype.deviceModel = function () { return this._deviceModel; };\n    RingCentralHelpers.prototype.language = function () { return this._language; };\n    RingCentralHelpers.prototype.location = function () { return this._location; };\n    RingCentralHelpers.prototype.shippingMethod = function () { return this._shippingMethod; };\n    RingCentralHelpers.prototype.state = function () { return this._state; };\n    RingCentralHelpers.prototype.timezone = function () { return this._timezone; };\n    RingCentralHelpers.prototype.account = function () { return this._account; };\n    RingCentralHelpers.prototype.blockedNumber = function () { return this._blockedNumber; };\n    RingCentralHelpers.prototype.call = function () { return this._call; };\n    RingCentralHelpers.prototype.conferencing = function () { return this._conferencing; };\n    RingCentralHelpers.prototype.contact = function () { return this._contact; };\n    RingCentralHelpers.prototype.contactGroup = function () { return this._contactGroup; };\n    RingCentralHelpers.prototype.device = function () { return this._device; };\n    RingCentralHelpers.prototype.extension = function () { return this._extension; };\n    RingCentralHelpers.prototype.forwardingNumber = function () { return this._forwardingNumber; };\n    RingCentralHelpers.prototype.message = function () { return this._message; };\n    RingCentralHelpers.prototype.phoneNumber = function () { return this._phoneNumber; };\n    RingCentralHelpers.prototype.presence = function () { return this._presence; };\n    RingCentralHelpers.prototype.ringout = function () { return this._ringout; };\n    RingCentralHelpers.prototype.service = function () { return this._service; };\n    return RingCentralHelpers;\n})();\nmodule.exports = new RingCentralHelpers();\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar Validator = (function () {\n    function Validator(utils) {\n        this.utils = utils;\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar List = (function () {\n    function List(utils) {\n        this.utils = utils;\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar Helper = (function () {\n    function Helper(utils, validator, list) {\n        this.defaultProperty = 'id';\n        this.utils = utils;\n        this.validator = validator;\n        this.list = list;\n    }\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber() {\n        _super.apply(this, arguments);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(utils, validator, list, presence, contact) {\n        _super.call(this, utils, validator, list);\n        this.contact = contact;\n        this.presence = presence;\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact() {\n        _super.apply(this, arguments);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup() {\n        _super.apply(this, arguments);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(utils, validator, list, extension, deviceModel) {\n        _super.call(this, utils, validator, list);\n        this.extension = extension;\n        this.deviceModel = deviceModel;\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension() {\n        _super.apply(this, arguments);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber() {\n        _super.apply(this, arguments);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(utils, validator, list, state) {\n        _super.call(this, utils, validator, list);\n        this.state = state;\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(utils, validator, list, contact) {\n        _super.call(this, utils, validator, list);\n        this.contact = contact;\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.addEventToSubscription = function (subscription, options) {\n        return subscription.setEventFilters([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber() {\n        _super.apply(this, arguments);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(utils, validator, list, extension) {\n        _super.call(this, utils, validator, list);\n        this.extension = extension;\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.addEventToSubscription = function (subscription, options, id) {\n        return subscription.setEventFilters([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, //TODO Type\n        presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEventFilters(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout() {\n        _super.apply(this, arguments);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(utils, validator, list, country) {\n        _super.call(this, utils, validator, list);\n        this.country = country;\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.country.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(6);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\n\n\n/***/ }\n/******/ ])\n});\n;\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c5802e40253841454a3e\n **/","/// <reference path=\"./externals.d.ts\" />\nvar validator = require('./core/Validator');\nvar list = require('./core/List');\nvar utils = require('./core/Utils');\nvar accountHelper = require('./helpers/Account');\nvar blockedNumberHelper = require('./helpers/BlockedNumber');\nvar callHelper = require('./helpers/Call');\nvar contactHelper = require('./helpers/Contact');\nvar contactGroupHelper = require('./helpers/ContactGroup');\nvar conferencingHelper = require('./helpers/Conferencing');\nvar countryHelper = require('./helpers/Country');\nvar deviceHelper = require('./helpers/Device');\nvar deviceModelHelper = require('./helpers/DeviceModel');\nvar extensionHelper = require('./helpers/Extension');\nvar forwardingNumberHelper = require('./helpers/ForwardingNumber');\nvar languageHelper = require('./helpers/Language');\nvar locationHelper = require('./helpers/Location');\nvar messageHelper = require('./helpers/Message');\nvar phoneNumberHelper = require('./helpers/PhoneNumber');\nvar presenceHelper = require('./helpers/Presence');\nvar ringoutHelper = require('./helpers/Ringout');\nvar serviceHelper = require('./helpers/Service');\nvar shippingMethodHelper = require('./helpers/ShippingMethod');\nvar stateHelper = require('./helpers/State');\nvar timezoneHelper = require('./helpers/Timezone');\nvar RingCentralHelpers = (function () {\n    function RingCentralHelpers() {\n        this.version = '0.1.0';\n        this._utils = new utils.Utils();\n        this._validator = new validator.Validator(this._utils);\n        this._list = new list.List(this._utils);\n        this._account = new accountHelper.Account(this._utils, this._validator, this._list);\n        this._blockedNumber = new blockedNumberHelper.BlockedNumber(this._utils, this._validator, this._list);\n        this._conferencing = new conferencingHelper.Conferencing(this._utils, this._validator, this._list);\n        this._contact = new contactHelper.Contact(this._utils, this._validator, this._list);\n        this._contactGroup = new contactGroupHelper.ContactGroup(this._utils, this._validator, this._list);\n        this._country = new countryHelper.Country(this._utils, this._validator, this._list);\n        this._extension = new extensionHelper.Extension(this._utils, this._validator, this._list);\n        this._deviceModel = new deviceModelHelper.DeviceModel(this._utils, this._validator, this._list);\n        this._device = new deviceHelper.Device(this._utils, this._validator, this._list, this._extension, this._deviceModel);\n        this._presence = new presenceHelper.Presence(this._utils, this._validator, this._list, this._extension);\n        this._call = new callHelper.Call(this._utils, this._validator, this._list, this._presence, this._contact);\n        this._forwardingNumber = new forwardingNumberHelper.ForwardingNumber(this._utils, this._validator, this._list);\n        this._language = new languageHelper.Language(this._utils, this._validator, this._list);\n        this._state = new stateHelper.State(this._utils, this._validator, this._list, this._country);\n        this._location = new locationHelper.Location(this._utils, this._validator, this._list, this._state);\n        this._message = new messageHelper.Message(this._utils, this._validator, this._list, this._contact);\n        this._phoneNumber = new phoneNumberHelper.PhoneNumber(this._utils, this._validator, this._list);\n        this._ringout = new ringoutHelper.Ringout(this._utils, this._validator, this._list);\n        this._service = new serviceHelper.Service(this._utils, this._validator, this._list);\n        this._shippingMethod = new shippingMethodHelper.ShippingMethod(this._utils, this._validator, this._list);\n        this._timezone = new timezoneHelper.Timezone(this._utils, this._validator, this._list);\n    }\n    RingCentralHelpers.prototype.country = function () { return this._country; };\n    RingCentralHelpers.prototype.deviceModel = function () { return this._deviceModel; };\n    RingCentralHelpers.prototype.language = function () { return this._language; };\n    RingCentralHelpers.prototype.location = function () { return this._location; };\n    RingCentralHelpers.prototype.shippingMethod = function () { return this._shippingMethod; };\n    RingCentralHelpers.prototype.state = function () { return this._state; };\n    RingCentralHelpers.prototype.timezone = function () { return this._timezone; };\n    RingCentralHelpers.prototype.account = function () { return this._account; };\n    RingCentralHelpers.prototype.blockedNumber = function () { return this._blockedNumber; };\n    RingCentralHelpers.prototype.call = function () { return this._call; };\n    RingCentralHelpers.prototype.conferencing = function () { return this._conferencing; };\n    RingCentralHelpers.prototype.contact = function () { return this._contact; };\n    RingCentralHelpers.prototype.contactGroup = function () { return this._contactGroup; };\n    RingCentralHelpers.prototype.device = function () { return this._device; };\n    RingCentralHelpers.prototype.extension = function () { return this._extension; };\n    RingCentralHelpers.prototype.forwardingNumber = function () { return this._forwardingNumber; };\n    RingCentralHelpers.prototype.message = function () { return this._message; };\n    RingCentralHelpers.prototype.phoneNumber = function () { return this._phoneNumber; };\n    RingCentralHelpers.prototype.presence = function () { return this._presence; };\n    RingCentralHelpers.prototype.ringout = function () { return this._ringout; };\n    RingCentralHelpers.prototype.service = function () { return this._service; };\n    return RingCentralHelpers;\n})();\nmodule.exports = new RingCentralHelpers();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/SDK.ts\n ** module id = 1\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar Validator = (function () {\n    function Validator(utils) {\n        this.utils = utils;\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/Validator.ts\n ** module id = 2\n ** module chunks = 0 1\n **/","/// <reference path=\"../externals.d.ts\" />\nvar List = (function () {\n    function List(utils) {\n        this.utils = utils;\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/List.ts\n ** module id = 3\n ** module chunks = 0 1\n **/","/// <reference path=\"../externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/Utils.ts\n ** module id = 4\n ** module chunks = 0 1\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Account.ts\n ** module id = 5\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar Helper = (function () {\n    function Helper(utils, validator, list) {\n        this.defaultProperty = 'id';\n        this.utils = utils;\n        this.validator = validator;\n        this.list = list;\n    }\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/Helper.ts\n ** module id = 6\n ** module chunks = 0 1\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber() {\n        _super.apply(this, arguments);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/BlockedNumber.ts\n ** module id = 7\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(utils, validator, list, presence, contact) {\n        _super.call(this, utils, validator, list);\n        this.contact = contact;\n        this.presence = presence;\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Call.ts\n ** module id = 8\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact() {\n        _super.apply(this, arguments);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Contact.ts\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup() {\n        _super.apply(this, arguments);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/ContactGroup.ts\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Conferencing.ts\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Country.ts\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(utils, validator, list, extension, deviceModel) {\n        _super.call(this, utils, validator, list);\n        this.extension = extension;\n        this.deviceModel = deviceModel;\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Device.ts\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/DeviceModel.ts\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension() {\n        _super.apply(this, arguments);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Extension.ts\n ** module id = 15\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber() {\n        _super.apply(this, arguments);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/ForwardingNumber.ts\n ** module id = 16\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Language.ts\n ** module id = 17\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(utils, validator, list, state) {\n        _super.call(this, utils, validator, list);\n        this.state = state;\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Location.ts\n ** module id = 18\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(utils, validator, list, contact) {\n        _super.call(this, utils, validator, list);\n        this.contact = contact;\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.addEventToSubscription = function (subscription, options) {\n        return subscription.setEventFilters([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Message.ts\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber() {\n        _super.apply(this, arguments);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/PhoneNumber.ts\n ** module id = 20\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(utils, validator, list, extension) {\n        _super.call(this, utils, validator, list);\n        this.extension = extension;\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.addEventToSubscription = function (subscription, options, id) {\n        return subscription.setEventFilters([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, //TODO Type\n        presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEventFilters(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Presence.ts\n ** module id = 21\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout() {\n        _super.apply(this, arguments);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Ringout.ts\n ** module id = 22\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Service.ts\n ** module id = 23\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/ShippingMethod.ts\n ** module id = 24\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(utils, validator, list, country) {\n        _super.call(this, utils, validator, list);\n        this.country = country;\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.country.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/State.ts\n ** module id = 25\n ** module chunks = 0\n **/","/// <reference path=\"../externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/Timezone.ts\n ** module id = 26\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}